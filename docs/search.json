[
  {
    "objectID": "9.1-HEFI19-NUT_ARTICLE.html",
    "href": "9.1-HEFI19-NUT_ARTICLE.html",
    "title": "Relationship between adherence to the 2019 Canada’s Food Guide recommendations on healthy food choices and nutrient intakes in older adults",
    "section": "",
    "text": "Code\n# ********************************************** #\n#                Markdown set-up                 #\n# ********************************************** #\n\nknitr::opts_chunk$set(echo = TRUE,\n                      message = FALSE,\n                      warning = FALSE,\n                      dpi = 300,\n                      out.width = \"80%\",\n                      fig.env = \"figure\",\n                      fig.align = \"center\"\n                      )\n\n## suppress scientific notation\noptions(scipen = 9999)\n\n## file path \npath &lt;- here::here()\n\n# ********************************************** #\n#              Relative file paths               #\n# ********************************************** #\n\n# create directory to save figures/table/data, if needed\nif(dir.exists(here::here(\"Manuscript\"))==FALSE){\n  dir.create(here::here(\"Manuscript\"))\n}\nif(dir.exists(here::here(\"Data\", \"Results\"))==FALSE){\n  dir.create(here::here(\"Data\", \"Results\"))\n}\n\nms_dir  &lt;- here::here(\"Manuscript\")\nres_dir &lt;- here::here(\"Data\",\"Results\")\n\n\n# *********************************************** #\n#                   Packages                      #\n# *********************************************** #\n\n## data management\nlibrary(haven)\nlibrary(tidyverse)\nlibrary(survey)\n\n## results presentation\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(gt)\nlibrary(tinytex)\nlibrary(MetBrewer)\n\n# *********************************************** #\n#                Common labels                    #\n# *********************************************** #\n\n### DRI groups\ndrig_list &lt;- \n  c(0,12,13,14,15)\n\ndrig_label &lt;- \n  c('Adults 65 y+',\n  'Males, 65 to 70 y',\n  'Females, 65 to 70 y',\n  'Males, 71 y+',\n  'Females, 71 y+')\n\ndrig_plotlabel &lt;- \n  c('12'='Males, 65 to 70 years',\n'13'='Females, 65 to 70 years',\n'14'='Males, 71 and older',\n'15'='Females, 71 and older')\n\n### Nutrient variable names\nvarname_list &lt;- \n  c('pro',\n    'pro_kg',\n    'calcium',\n    'vit_d',\n    'iron',\n    'zinc',\n    'vit_b6',\n    'vit_b12',\n    'dfe',\n    'mg',\n    'pota',\n    'fibers',\n    'rae')\n\nlabel_list &lt;- \n  c('Protein, g/d',\n    'Protein, g/kg/d',\n    'Calcium, mg/d',\n    'Vitamin D, mcg/d',\n    'Iron, mg/d',\n    'Zinc, mg/d',\n    'Vitamin B6, mg/d',\n    'Vitamin B12, mcg/d',\n    #'Dietary folate equivalent, mcg/d',\n    'Folate, DFE/d',\n    'Magnesium, mg/d',\n    'Potassium, mg/d',\n    'Fiber, g/d',\n    'Vitamin A, RAE/d' )\n\nvarlabel_data &lt;-\n  data.frame(varname=varname_list,\n             varnamelabel=label_list)\n\nvarlabel_list &lt;- \n  c(pro='Protein, g/d',\n    pro_kg = 'Protein, g/kg/d',\n    calcium='Calcium, mg/d',\n    vit_d='Vitamin D, mcg/d',\n    iron='Iron, mg/d',\n    zinc='Zinc, mg/d',\n    vit_b6='Vitamin B6, mg/d',\n    vit_b12='Vitamin B12, mcg/d',\n    #dfe='Dietary folate equivalent, mcg/d',\n    dfe='Folate, DFE/d',\n    mg='Magnesium, mg/d',\n    pota='Potassium, mg/d',\n    fibers='Fiber, g/d',\n    rae='Vitamin A, RAE/d')\n\nvarlabeltidy_list &lt;- \n  c( pro='Protein', \n    pro_kg='Protein', \n    calcium='Calcium', \n    vit_d='Vitamin D', \n    iron='Iron', \n    zinc='Zinc', \n    vit_b6='Vitamin B6', \n    vit_b12='Vitamin B12', \n    #dfe='Dietary folate equivalent', \n    dfe='Folate', \n    mg='Magnesium', \n    pota='Potassium', \n    fibers='Fiber',\n    rae='Vitamin A'\n  )\n\n  \n# ********************************************** #\n#                   Functions                    #\n# ********************************************** #\n\n# &lt;tolower1&gt;: lower case,but only for first letter (works for 1 word)\n  tolower1 &lt;- function(x) {\n    substr(x, 1, 1) &lt;- tolower(substr(x, 1, 1))\n    return(x) \n  }\n  \n # alternative with many words:\n # lapply(many_x,function(x) str_replace(x, \"^\\\\w{1}\", tolower) )\n\n\n# &lt;makeEstimate&gt; to format mean (SD) (within mutate step for example)\nmakeEstimate &lt;- function(est,var,rounding=0.1){\n  paste0( scales::number(est,accuracy = rounding,big.mark=\",\"),\" (\",scales::number(var,accuracy = rounding,big.mark=\",\",),\")\")\n}\n\n# &lt;makeEstimateCI&gt; to format Estimate (95%CI) (within mutate step for example)\nmakeEstimateCI &lt;- function(est,lcl,ucl,sep=\" to \",numsep=\",\",rounding=0.1){\npaste0( scales::number(est,accuracy = rounding,big.mark=numsep),\n        \" (\",scales::number(lcl,accuracy = rounding,big.mark=numsep),\n          sep,\n        scales::number(ucl,accuracy = rounding,big.mark=numsep),\n          \")\")  \n}\n\nmake95ci &lt;- function(x,sep=\", \",rounding=0.01,reverse=0,add_suffix=\"\"){\n  lcl &lt;- paste0(scales::number(x$lcl95,accuracy=rounding),add_suffix)\n  ucl &lt;- paste0(scales::number(x$ucl95,accuracy=rounding),add_suffix)\n  if(reverse==0){\n  # Regular ordering, estimate (LCL to UCL)\n    return(\n      noquote( paste0(lcl,sep,ucl) )\n    )\n  } else {\n    # Reversed ordering, estimate (UCL to LCL)\n    return(\n      noquote( paste0(ucl,sep,lcl) )\n    )\n  }\n  \n}\n\n# &lt;slice_mc_t_out&gt; to import individual data point\nslice_mc_t_out  &lt;- \n  function(nutrient,nutrient_label){\n  # set seed for consistent selection\n  set.seed(1101) # note: generated using &lt;https://www.random.org&gt; (range 1:5000) on 2023-07-27, first trial\n  # import, sample obs | weight_nw_sumw_div, include id, return\n  mc_sample &lt;- \n    haven::read_sas(file.path(path,\"NCI\",paste0(\"MCMC_\",nutrient_label),\"Model\",\"_usintake_mc_t_out0.sas7bdat\"),\n                  col_select=c(adm_rno,drig,weight_nw_sumw_div,\n                               HEFI2019_TOTAL_SCORE,{{nutrient}})) |&gt; \n  dplyr::slice_sample(n = 200, # Better to use fixed sample size for consistency purpose\n                      weight_by = weight_nw_sumw_div) |&gt; \n  dplyr::mutate(\n     pseudoid = row_number()\n  ) |&gt;\n  dplyr::select(-weight_nw_sumw_div)\n  return(mc_sample)\n  }\n\n# Auxiliary functions to read MCMC data and calculate correlations\n  source(here::here(\"Macros\",\"post_mcmc_auxiliary.R\"))\n\n# ********************************************** #\n#              Style and formatting              #\n# ********************************************** #\n\n# Cleveland dot plot - originally found on Stack Overflow, cant find the source \ntheme_dotplotx &lt;- function() {\n  ggplot2::theme( ## remove the vertical grid lines\n    panel.grid.major.x = element_blank() ,\n    panel.grid.minor.x = element_blank() ,\n    ## explicitly set the horizontal lines (or they will disappear too)\n    panel.grid.major.y = element_line(color=\"black\", linetype = 3),\n    axis.text.y = element_text(size=rel(1.2),color=\"black\"),\n    axis.text.x = element_text(size=rel(1.2),color=\"black\"),\n    ## use a white backgrounsd\n    panel.background = element_rect(fill = \"white\", colour = NA),\n    panel.border = element_rect(fill = NA, colour = \"grey20\"))\n}\n\n## GT Table style\n  gtstyle &lt;- function(gtobject,footnote_marker=\"numbers\"){\n    gtobject |&gt;\n      gt::tab_style(\n        style = list(\n          cell_text(weight = \"bold\")  ),\n        locations = cells_row_groups(groups = everything())\n      ) |&gt;\n      gt::opt_align_table_header(\"left\") |&gt;\n      gt::opt_footnote_marks(marks=footnote_marker)\n  }\n\n## saving gt object vs. printing directly\n  gtsave_select &lt;- function(object,label,docx){\nif(docx == \"Y\"){\n  # save as docx\n object |&gt;\n    gt::gtsave(file.path(ms_dir,paste0(label,\".docx\")))\n} else {\n  # print gt object directly\n  object\n}\n  \n}"
  },
  {
    "objectID": "9.1-HEFI19-NUT_ARTICLE.html#study-design-and-participants",
    "href": "9.1-HEFI19-NUT_ARTICLE.html#study-design-and-participants",
    "title": "Relationship between adherence to the 2019 Canada’s Food Guide recommendations on healthy food choices and nutrient intakes in older adults",
    "section": "Study Design and Participants",
    "text": "Study Design and Participants\nThis study is based on a sample of older adults aged 65 years or older from the CCHS 2015 – Nutrition (19). The CCHS 2015 -Nutrition is a nationally representative survey of individuals aged 1 year and older living in private dwellings in the 10 Canadian provinces. Full-time members of the Canadian Forces and individuals living in the Territories, on reserves, in remote areas, and in institutions were not included. Data collection occurred between January 1st to December 31, 2015. Respondents aged less than 65 years (n=16,394) and those reporting zero energy on their first 24-hour dietary recall intake were excluded (n=4), yielding a final sample of 4,089 respondents. The public use microdata file (PUMF) of CCHS 2015 – Nutrition was obtained from Statistics Canada."
  },
  {
    "objectID": "9.1-HEFI19-NUT_ARTICLE.html#data-collection-and-dietary-assessment",
    "href": "9.1-HEFI19-NUT_ARTICLE.html#data-collection-and-dietary-assessment",
    "title": "Relationship between adherence to the 2019 Canada’s Food Guide recommendations on healthy food choices and nutrient intakes in older adults",
    "section": "Data Collection and Dietary Assessment",
    "text": "Data Collection and Dietary Assessment\nInterviewer-administered 24-hour dietary recalls were used to assess dietary intakes. The interviews were mostly (98%) conducted in person for the first 24-hour recall and by telephone for the second 24-hour recall. All 24-hour recall interviews were structured according to the Automated Multiple Pass Method (19). Portion size estimation of foods and beverages in plates, bowls, glasses and mugs was facilitated using a food booklet designed for the survey (19). All respondents completed one 24-hour recall and a subsample of 1,706 respondents (42%) completed a second 24-hour recall. Nutrient intakes were calculated based on the Canadian Nutrient File 2015 (20), except for intakes of free sugars which were recently published by Health Canada (21). Total food intakes expressed in reference amounts (RA) (22) were calculated for each respondent, 24-hour dietary recall and HEFI-2019 food and beverage categories. The interviewers measured body weight of respondents with a standard scale (LifeSource Scales Model US-321).\n\nThe Healthy Eating Food Index (HEFI) 2019\nThe HEFI-2019 is a continuous score which measures the degree of adherence between dietary intakes and Canada’s Food Guide 2019 recommendations on healthy food choices. Complete details about the development and the evaluation of the HEFI-2019 are available elsewhere (17, 18). Briefly, the HEFI-2019 has 10 components including 5 based on intake of foods (Vegetables and fruits, Whole-grain foods, Grain foods ratio, Protein foods, Plant-based protein foods), 1 on beverages (Beverages), and 4 on nutrients (Fatty acids ratio, Saturated fats, Free sugars, and Sodium). The Saturated fats, Free sugars and Sodium components are so-called “moderation” components, for which higher scores are attributed to intakes below thresholds consistent with CFG-2019 recommendations. The remaining components are “adequacy” components for which higher scores are attributed to greater intakes. Details about each component and scoring standards are presented in Supplemental Table 1. The total HEFI-2019 score sums up to 80 points with higher scores indicating greater adherence to recommendations. The HEFI-2019 was evaluated using dietary intake data from the CCHS 2015 – Nutrition (18). Notably, the variability of the HEFI-2019 score was sufficient, the HEFI-2019 score was correlated with the Healthy Eating Index (HEI)-2015 (r=0.79) and differences of HEFI-2019 score were found among subgroups with known diet quality differences based on sex, age, and smoking status (18). Finally, a prospective analysis of UK Biobank data suggested that a hypothetical increase in HEFI-2019 score reduces the 11-year risk of cardiovascular disease in middle-aged and older adults (6).\n\n\nNutrient intakes\nKey nutrients for older adults were selected a priori according to data availability in the CCHS 2015 – Nutrition as well as previous literature (13, 23). The nutrients were protein, calcium, vitamin D, iron, zinc, vitamin B6, vitamin B12, dietary folate equivalent (folate hereafter), magnesium, potassium, fiber, and retinol activity equivalent (vitamin A hereafter). Nutrient intakes from supplements were not included since Canada’s Food Guide recommendations on healthy food choices focus on foods and beverages. The proportion of respondents with inadequate intakes was estimated using the cut-point method and the Estimated Average Requirements (EAR) of the Dietary Reference Intake (24). Because there is no EAR for potassium and fiber, the prevalence of intake inadequacy cannot be assessed. Instead, the proportion of respondents with intakes above the adequate intake (AI) value was considered.\nRecognizing the consensus that recommended protein intakes for older adults should be higher than current recommendations (25-27), we also estimated the proportion of respondents with inadequate protein intakes at cut-offs higher than the current EAR. The hypothetical EAR cut-offs of 0.8 and 1.0 grams of protein per kg of bodyweight were selected to reflect hypothetical higher recommended daily allowance (RDA) of 1.0 and 1.2 g/kg, respectively. The latter analysis was not pre-specified and is considered exploratory."
  },
  {
    "objectID": "9.1-HEFI19-NUT_ARTICLE.html#statistical-analyses",
    "href": "9.1-HEFI19-NUT_ARTICLE.html#statistical-analyses",
    "title": "Relationship between adherence to the 2019 Canada’s Food Guide recommendations on healthy food choices and nutrient intakes in older adults",
    "section": "Statistical Analyses",
    "text": "Statistical Analyses\nSampling weights provided by Statistics Canada were used in all analyses to reflect the Canadian population of older adults in 2015 as well as bootstrap replicate weights for variance estimation. The sampling weights accounting for missing data on body weight were also used where appropriate. Analyses were performed in SAS Studio v3.8 (SAS Institute) and R version 4.2.2 (2022-10-31) (R Foundation for Statistical Computing).\nTo assess the relationship between the HEFI-2019 score and nutrient intakes, analyses involved four steps, detailed below:\n\nmeasurement error correction of dietary intakes to estimate usual intakes using the National Cancer Institute (NCI) Markov Chain Monte Carlo (MCMC) multivariate method;\nlinear regression of continuous nutrient intakes on total HEFI-2019 scores;\nlogistic regression of the proportion of individuals below EAR on total HEFI-2019 scores; and,\nvariance estimation using bootstrap replicate weights provided by Statistics Canada.\n\nFirst, the 24-hour dietary recalls are mainly affected by within-individual random errors, which require correction to estimate distribution of intakes (28, 29). To account for correlated random errors of all dietary constituents of the HEFI-2019 (e.g., vegetables and fruits, free sugars) and those of nutrient intakes (e.g., protein), the NCI MCMC multivariate method was used (MULTIVAR_MCMC_MACRO_V2.1 and MULTIVAR_DISTRIB_MACRO_V2.1, 2017) (30, 31). Briefly, the multivariate method uses Monte Carlo simulation to estimate distribution of usual intakes (i.e., long-term average) of multiple dietary constituents correlated with each other. The multivariate method also accounts for systematic differences due to “nuisance” factors (day of the week, sequence of recall) and considers foods that are episodically consumed (e.g., plant-based protein foods) (30).\nNutrients with common food sources were modelled together to have parsimonious measurement error correction models, yielding 5 different models each combining 1 to 4 nutrients with the 15 dietary constituents of the HEFI-2019 (see below). Model 1 included protein only; model 2 included calcium and vitamin D; model 3 included iron, zinc, vitamin B6 and vitamin B12; model 4 included folate, magnesium, potassium and fiber; model 5 included vitamin A only. The 15 dietary constituents of the HEFI-2019 were vegetables and fruits, whole-grain foods, animal-based protein foods, plant-based protein foods, unsweetened milk, water and other healthy beverages (e.g., unsweetened coffee or tea), refined grain foods, “other” foods not recommended, “other” beverages not recommended (i.e., sugary drinks, artificially sweetened beverages, vegetable and fruit juices, sweetened milk and plant-based beverages, alcohol), free sugars, monounsaturated fats, polyunsaturated fats, saturated fats, sodium and total energy intake. A total of 5 food and beverage categories (i.e., whole-grain foods, refined grain foods, plant-based protein foods, “other” beverages not recommended and unsweetened milk) were considered episodically consumed since at least 10% of respondents reported zero consumption on the first 24-h recall (31). All the remaining foods and nutrients were considered as consumed daily.\nThe measurement error correction models were stratified by sex to reflect sex-specific random variations in dietary intakes and to derive sex-specific associations (31, 32). The models also included the covariates age (indicator for 71 years or older), sequence of recall (indicator for second recall) and weekend (indicator for a 24-hour recall of intakes on Friday, Saturday or Sunday). In addition, the model for protein intake also included body weight (kg) as a covariate to derive protein intake per kg and assess the proportion of individuals below the EAR. A total of 500 pseudo-individuals were generated in the Monte Carlo simulation step of the NCI multivariate method. Simulations from each stratum (i.e., males and females) were pooled together. The HEFI-2019 scoring algorithm was then applied using the modelled dietary constituents among the 500 pseudo-individuals to derive HEFI-2019 scores. Descriptive statistics were calculated based on usual intakes among the 500 pseudo-individuals including the prevalence of intake inadequacy, mean (SD) dietary intakes and HEFI-2019 scores as well as correlations between dietary constituents of the HEFI-2019 and nutrient intakes.\nSecond, based on the Monte Carlo simulation data, simple linear regression models were used to assess the relationship between the continuous HEFI-2019 score, as the independent variable, and continuous nutrient intakes, as the dependent variable. A restricted cubic spline transformation with 5 knots (percentiles 5, 27, 50, 73 and 95) was applied a priori to the HEFI-2019 score to assess potential non-linearity (33). To estimate change according to feasible increases in adherence, expected nutrient intake differences were calculated according to an increase in HEFI-2019 score from the median score to the 90th percentile of the usual intake distribution. In other words, we estimated nutrient intake difference according to a hypothetical change where respondents would have had high HEFI-2019 scores compared with the HEFI-2019 score respondents had on average, taken as the median of this sample.\nThird, also based on the Monte Carlo simulation data, logistic regression models were used to assess the odds of having nutrient intake below the age- and sex-specific EAR and the continuous HEFI-2019 score. A restricted cubic spline transformation was also applied to the HEFI-2019 score. Predicted odds of nutrient intake inadequacy were generated for the 90th percentile and the median. Both predicted odds were then re-expressed as risk of inadequacy (\\(\\text{risk}=\\frac{e^X}{(1+e^X)}\\)); where \\(X\\) corresponds to predicted odds at a given HEFI-2019 score percentile). The expected change in the prevalence of inadequate nutrient intakes, i.e., risk difference, was calculated by the difference between the estimated risk of inadequacy at the 90th percentile vs. the median HEFI-2019 score.\nFourth, steps 1 to 3 were repeated 500 times using bootstrap replicate weights to generate standard errors and 95%CI via normal approximation. The convergence of bootstrap standard errors and the normality of bootstrap estimates were confirmed graphically. Data from one bootstrap replicate was removed for potassium due to non-convergence."
  },
  {
    "objectID": "9.1-HEFI19-NUT_ARTICLE.html#hefi-2019-score-and-dietary-constituents",
    "href": "9.1-HEFI19-NUT_ARTICLE.html#hefi-2019-score-and-dietary-constituents",
    "title": "Relationship between adherence to the 2019 Canada’s Food Guide recommendations on healthy food choices and nutrient intakes in older adults",
    "section": "HEFI-2019 Score and Dietary Constituents",
    "text": "HEFI-2019 Score and Dietary Constituents\n\n\nCode\n# *********************************************************************** #\n#               Import SAS data of HEFI-2019 distribution                 #\n# *********************************************************************** #\n\nhefi_distrib_all &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_score', 'Results', 'distribtotal_w0.sas7bdat')) |&gt; \n  dplyr::mutate(drig=0,\n                varname=\"HEFI2019_TOTAL_SCORE\",\n                mean_sd = makeEstimate(Mean,StdDev)\n                )\n\nhefi_distrib_drig &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_score', 'Results', 'distribtotal_w_drig0.sas7bdat')) |&gt; \n  dplyr::filter(drig&lt;9000) |&gt; # remove score differences among DRI groups\n  dplyr::select(-Contrast) |&gt; \n  dplyr::mutate(\n    mean_sd = makeEstimate(Mean,StdDev)\n  )\n\n# append both\nhefi_distrib &lt;- \n  rbind(hefi_distrib_all,hefi_distrib_drig)\n\nhefi_distrib$drigf &lt;- \n  factor(hefi_distrib$drig,\n         levels=drig_list,\n         labels=drig_label)\n\n# clean temporary data\n  rm(hefi_distrib_all)\n  rm(hefi_distrib_drig)\n  \n# output ordered list\n\n  hefi_distrib_orderd &lt;- \n    hefi_distrib |&gt;\n    dplyr::filter(drig&gt;0) |&gt;\n    dplyr::arrange(desc(Mean)) |&gt;\n    dplyr::select(Mean,StdDev,mean_sd,drig,drigf)\n\n# *********************************************************************** #\n#             Plot score distribution using density function              #\n# *********************************************************************** #\n\n# Make long data to plot distrib\nhefi_distrib_t &lt;- \n  hefi_distrib |&gt; \n  dplyr::select(drig,drigf,Pctile1:Pctile99) |&gt; \n  tidyr::pivot_longer(\n   cols= Pctile1:Pctile99\n  ) |&gt;\n  dplyr::mutate(\n    p = as.numeric(gsub('Pctile','',name))\n  )\n\n# save data for future analyses\nsave( hefi_distrib_t,\n      file = file.path(res_dir,\"hefi_distrib_t.rdata\"))\n\n\nThe mean (SD) HEFI-2019 score among all adults 65 years and older was 46.0 (8.9) (/80 points). Among age and sex subgroups, the mean HEFI-2019 score was the highest in females, 65 to 70 y (48.2 points) and the lowest in males, 65 to 70 y (44.9 points; Figure 1).\n\n\nCode\n# *********************************************************************** #\n#               Plot score distribution using Box+Density                 #\n# *********************************************************************** #\n\n# load data\n load(file=file.path(res_dir,\"mrg_all.rdata\"))\n\n# generate figure \nhefi_distrib_plot &lt;-\n  hefi_distrib_t |&gt;\n  dplyr::mutate(\n    sample=ifelse(drig==0,\"All\",\"By DRI group\")\n  ) |&gt;\n  dplyr::filter(drig!=0) |&gt;\n  # ggplot call\n  ggplot(stat=\"identity\") +\n    # half density\n      ggdist::stat_slab(aes(y = drigf, x = value, #fill = drigf\n                            ), fill=\"gray\",\n                        color=\"black\",\n                        side = \"right\", justification=-0.15,\n                        scale = 0.75, position = \"dodge\",alpha = .5) +\n    # Box plot\n      geom_boxplot(data=subset(hefi_distrib, drig&gt;0),\n                   aes(y=drigf,xlower=Pctile25,xupper=Pctile75,\n                       xmiddle=Pctile50,\n                       xmin=Pctile5, xmax=Pctile95,\n                       #fill = drigf\n                       ), fill=\"white\",\n                   alpha=0.5, width= .2, stat=\"identity\") +\n    # Diamond for mean\n      geom_point(data=subset(hefi_distrib, drig&gt;0),\n                 aes(x = Mean,y=drigf),shape=18, size=4) +\n  labs(x=\"HEFI-2019 score based on usual intakes (/80), points\",\n       y=\"Age and sex group\") +\n  theme_bw()\n\n# Show figure\nhefi_distrib_plot\n\n# ********************************************** #\n#            Export graph as PDF/PNG             #\n# ********************************************** #\n\n  ggplot2::ggsave(file.path(ms_dir, 'Fig1_hefi_distrib.pdf'),\n        plot=hefi_distrib_plot, dpi=300, width=7,height=7, units=\"in\",scale=1,device = cairo_pdf)\n\n  ggplot2::ggsave(file.path(ms_dir, 'Fig1_hefi_distrib.png'),\n         plot=hefi_distrib_plot, dpi=300, width=7,height=7, units=\"in\",scale=1)\n\n\n\n\n\nFigure 1: Distribution of total HEFI-2019 score, based on usual dietary intakes in 4,089 adults aged 65 years and more from the CCHS 2015 - Nutrition. Diamonds are means. Left and right whiskers indicate the 5th and 95th percentile, respectively. Dietary intakes were modelled using the National Cancer Institute multivariate method to estimate usual intakes (see Methods). CCHS, Canadian Community Health Survey; DRI, Dietary Reference Intake; HEFI-2019, Healthy Eating Food Index-2019.\n\n\n\n\n\n\nCode\n# *********************************************************************** #\n#                 MCMC data of HEFI dietary constituents                  #\n# *********************************************************************** #\n\n# Read mcmc data and save as &lt;rds&gt; for efficiency purpose\nif(file.exists(file.path(res_dir,\"usintake_mc_t_out0.rds\"))==FALSE){\n  ## record time\n  tictoc::tic(msg = \"loading &lt;NCI/MCMC_score/Model/_usintake_mc_t_out0.sas7bdat&gt;\")\n  ## read mcmc data on external drive once, write as .rds file for future use\n  haven::read_sas(file.path(path, 'NCI', 'MCMC_score', 'Model', '_usintake_mc_t_out0.sas7bdat')) |&gt;\n    ### drop some variables as only dietary intake data used here\n    select(-c(weight_nw_sumw, starts_with(\"HEFI\"), starts_with(\"RATIO\"),\n              catscore, starts_with(\"Prob\"), energy_unit)) |&gt;\n  saveRDS(file = file.path(res_dir,\"usintake_mc_t_out0.rds\"))\n  ## show time\n  tictoc::toc()\n} else {\n  ## file already exists, do nothing else\n  message(\"note: &lt;usintake_mc_t_out0.rds&gt; data found in &lt;./Data/Results/&gt;\")\n}\n\n\nloading &lt;NCI/MCMC_score/Model/_usintake_mc_t_out0.sas7bdat&gt;: 36.596 sec elapsed\n\n\nCode\n    # note: the SAS format &lt;.sas7bdat&gt; produces ~ 1.5-folder larger data\n\n# read rds file, prepare\nmcmc &lt;- \n  readRDS(file = file.path(res_dir,\"usintake_mc_t_out0.rds\")) |&gt;\n  select(weight_nw_sumw_div, wg, rg, pfab, pfpb, milk) |&gt;\n  mutate(\n    # grain sources\n    ratio_wg_total = wg / (wg+rg), \n    # protein sources\n    milk_ra    = milk/258,\n    pro_total  = pfab + pfpb + milk_ra,\n    pro_animal = pfab + milk_ra,\n    ratio_proanimal_total = pro_animal / pro_total\n  ) \n\n# ********************************************** #\n#          Output statistic of interest          #\n# ********************************************** #\n\nratio_wg_total &lt;- \n  with(mcmc, stats::weighted.mean(x = ratio_wg_total,\n                                  w = weight_nw_sumw_div))\n\nratio_proanimal_total &lt;- \n  with(mcmc, stats::weighted.mean(x = ratio_proanimal_total,\n                                  w = weight_nw_sumw_div))\n\n# clean temporary large file\nrm(mcmc)\n\n\nSupplemental Table 2 and 3 present, respectively, usual mean intakes and percentile of the distribution of foods and beverages, as well as nutrients, contributing to the HEFI-2019 score. Older adults consumed approximately 86% of their total protein foods from animal-based source and 65% of their total grain foods intake as non-whole grain foods.\n\n\nCode\n# *********************************************************************** #\n#                    Apply function on each nutrients                     #\n# *********************************************************************** #\n\n#Load data, estimate correlations and save results\n\n# note: &lt;read_n_corr&gt; located in &lt;./Macros/post_mcmc_auxiliary.R&gt;\n# note: if needed, could apply a &lt;purrr&gt; loop to obtain bootstrap sampling distribution\n\nif(file.exists(file.path(res_dir,\"suppl_corr.rdata\"))==FALSE){\ncorr_pro &lt;-\n  read_n_corr(nut_vars  = \"proteins\",\n              nut_label = \"pro\",\n              tidy      = TRUE)\n\ncorr_ca_vitd &lt;-\n  read_n_corr(nut_vars  = c(\"calcium\", \"vit_d\"),\n              nut_label = \"ca_vit_d\",\n              tidy      = TRUE)\n\ncorr_miscA &lt;-\n  read_n_corr(nut_vars  = c(\"iron\", \"zinc\", \"vit_b6\", \"vit_b12\"),\n              nut_label = \"miscA\",\n              tidy      = TRUE)\n\ncorr_miscB &lt;-\n  read_n_corr(nut_vars  = c(\"dfe\", \"mg\", \"fibers\", \"pota\"),\n              nut_label = \"miscB\",\n              tidy      = TRUE)\n\ncorr_vita &lt;-\n  read_n_corr(nut_vars  = c(\"vit_a\"),\n              nut_label = \"vit_a\",\n              tidy      = TRUE)\n\nsuppl_corr &lt;-\n  full_join(corr_pro,\n            corr_ca_vitd) |&gt;\n  full_join(corr_miscA) |&gt;\n  full_join(corr_miscB) |&gt;\n  full_join(corr_vita) |&gt;\n  rename(rae = vit_a )\n\n\n# Save correlation data for further analyses\nsave(suppl_corr,\n     file = file.path(res_dir,\"suppl_corr.rdata\"))\n} \n\n\nStep 1 - reading MCMC: 5.886 sec elapsed\nStep 2 - adj. and correlations: 12.889 sec elapsed\nStep 1 - reading MCMC: 9.459 sec elapsed\nStep 2 - adj. and correlations: 21.718 sec elapsed\nStep 1 - reading MCMC: 9.911 sec elapsed\nStep 2 - adj. and correlations: 24.337 sec elapsed\nStep 1 - reading MCMC: 10.553 sec elapsed\nStep 2 - adj. and correlations: 22.294 sec elapsed\nStep 1 - reading MCMC: 9.478 sec elapsed\nStep 2 - adj. and correlations: 22.326 sec elapsed\n\n\nCode\n# load corr data regardless\nload(file = file.path(res_dir,\"suppl_corr.rdata\"))\n\n# ********************************************** #\n#                Data preparation                #\n# ********************************************** #\n\n# Transpose from wide to long\nsuppl_corr_t &lt;-\n  suppl_corr |&gt;\n  # drop identifier\n  dplyr::select(-c(replicate, index, name)) |&gt;\n  # transpose\n  t() |&gt;\n  tibble::as_tibble() |&gt;\n  setNames(suppl_corr$name) \n\n# Add nutrient names\nsuppl_corr_t$nutrient &lt;- names(suppl_corr)[4:15]\n\n# Vector of HEFI foods\n  hefi_foods &lt;- \n    c('vf', 'wg', 'pfab', 'pfpb', 'milk', 'water', 'otherbevs', 'rg', 'otherfoods')\n# Add the &lt;_res&gt; suffix for easy id\n  hefi_foods_res &lt;- \n    paste0(hefi_foods,\"_res\")\n\n# prepare data for correlation heatmap: 'melt'\nsuppl_corr_t_melted &lt;- \n  suppl_corr_t |&gt;\n  select(nutrient,all_of(hefi_foods_res)) |&gt; # select components only\n  reshape2::melt()\n\n# ********************************************** #\n#                  Nicer labels                  #\n# ********************************************** #\n\n# order values and add 'clean' labels\nsuppl_corr_t_melted$nutrient_f &lt;-\n  factor(suppl_corr_t_melted$nutrient,\n         levels =c('proteins', \n                   'calcium', \n                   'vit_d', \n                   'iron', \n                   'zinc', \n                   'vit_b6', \n                   'vit_b12', \n                   'dfe', \n                   'mg', \n                   'fibers', \n                   'pota', \n                   'rae'),\n         labels  =c('Protein', \n                    'Calcium', \n                    'Vitamin D', \n                    'Iron', \n                    'Zinc', \n                    'Vitamin B6', \n                    'Vitamin B12', \n                    'Folate', \n                    'Magnesium', \n                    'Fiber', \n                    'Potassium', \n                    'Vitamin A'))\n\nsuppl_corr_t_melted$variable_f &lt;-\n  factor(suppl_corr_t_melted$variable,\n         levels = c('vf_res',\n                    'wg_res',\n                    'pfab_res',\n                    'pfpb_res',\n                    'milk_res',\n                    'water_res',\n                    'otherbevs_res',\n                    'rg_res',\n                    'otherfoods_res'),\n         labels = c('Vegetables and fruits',\n                    'Whole-grain foods',\n                    'Animal protein foods',\n                    'Plant protein foods',\n                    'Unsweetened milk',\n                    'Water & healthy bev.',\n                    'Other beverages',\n                    'Non-whole grains',\n                    'Other foods'))\n\n\n# save for further analyses\nsave(suppl_corr_t_melted,\n     file = file.path(res_dir, \"suppl_corr_t_melted.rdata\"))\n\n# ********************************************** #\n#                 Interpretation                 #\n# ********************************************** #\n\ncorr_text &lt;- \n  suppl_corr_t_melted |&gt;\n  mutate(\n    # trick to keep upper case in nutrient names\n    nutrient_f_lowcase = lapply(nutrient_f,function(x) str_replace(x, \"^\\\\w{1}\", tolower)) ,\n    # create text of foods/nutrient + correlation estimate\n    relation = paste(tolower(variable_f),\"and\", nutrient_f_lowcase),\n    estimate = paste0(\"(r=\",scales::number(value,accuracy=0.01),\")\"),\n    nutrient_n_estimate = paste(nutrient_f_lowcase,estimate),\n    relation_n_estimate = paste(relation,estimate),\n    # flag food categories not recommended in CFG\n    not_recommended_CFG = ifelse(variable %in% c(\"otherbevs_res\",\"rg_res\",\"otherfoods_res\"),1,0)\n  ) |&gt;\n  select(-nutrient_f_lowcase)\n\n\nSupplemental Figure 1 presents Pearson correlations between food and beverage categories contributing to the HEFI-2019 score and key nutrients. Most food and beverage categories recommended in CFG 2019 were correlated with greater nutrient intakes. Notably, the highest correlations were observed between unsweetened milk and calcium (r=0.56), vegetables and fruits and fiber (r=0.54), whole-grain foods and fiber (r=0.54) as well as unsweetened milk and vitamin D (r=0.53). Among foods and beverages not recommended in CFG, non-whole grain foods was the only group showing positive correlations with nutrient intakes including with folate (r=0.16) and with vitamin D (r=0.12)."
  },
  {
    "objectID": "9.1-HEFI19-NUT_ARTICLE.html#prevalence-of-inadequate-nutrient-intake",
    "href": "9.1-HEFI19-NUT_ARTICLE.html#prevalence-of-inadequate-nutrient-intake",
    "title": "Relationship between adherence to the 2019 Canada’s Food Guide recommendations on healthy food choices and nutrient intakes in older adults",
    "section": "Prevalence of Inadequate Nutrient Intake",
    "text": "Prevalence of Inadequate Nutrient Intake\n\n\nCode\n# *********************************************************************** #\n#            Distribution of usual intakes for each nutrient              #\n# *********************************************************************** #\n\n# define variables to keep in each distribution data\ndistrib_var &lt;- \n  c(\"drig\",\"varname\",\"Mean\",\"StdDev\",\"Variance\", paste0(\"Pctile\",seq(1,99)))\n\n# ********************************************** #\n#            Import nutrient distrib             #\n# ********************************************** #\n\ndistrib_pro &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_pro', 'Results', 'distrib_y_abs_w0.sas7bdat')) |&gt;\n  dplyr::select(!!distrib_var) |&gt;\n  rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_pro', 'Results', 'distrib_y_rel_w0.sas7bdat')) |&gt;\n  dplyr::select(!!distrib_var))\n\ndistrib_cavitd &lt;- \n  # Calcium\n  haven::read_sas(file.path(path,'NCI', 'MCMC_ca_vit_d', 'Results', 'distrib_y_ca_w0.sas7bdat')) |&gt;\n  dplyr::select(!!distrib_var) |&gt;\n  # Vitamin D\n  rbind( haven::read_sas(file.path(path,'NCI', 'MCMC_ca_vit_d', 'Results', 'distrib_y_vitd_w0.sas7bdat')) |&gt;\n  dplyr::select(!!distrib_var))\n\ndistrib_miscA &lt;- \n  # Iron\n  (haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Results', 'distrib_y_iron_w0.sas7bdat')) |&gt;\n  dplyr::select(!!distrib_var) ) |&gt;\n  # Zinc\n  rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Results', 'distrib_y_zinc_w0.sas7bdat')) |&gt;\n  dplyr::select(!!distrib_var) ) |&gt;\n  # Vitamin B6\n  rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Results', 'distrib_y_b6_w0.sas7bdat')) |&gt;\n  dplyr::select(!!distrib_var) )  |&gt;\n  # Vitamin B12\n  rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Results', 'distrib_y_b12_w0.sas7bdat')) |&gt;\n  dplyr::select(!!distrib_var) ) \n  \ndistrib_miscB &lt;- \n  # Folate\n  (haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Results', 'distrib_y_dfe_w0.sas7bdat')) |&gt;\n  dplyr::select(!!distrib_var) ) |&gt;\n  # Magnesium\n  rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Results', 'distrib_y_mg_w0.sas7bdat')) |&gt;\n  dplyr::select(!!distrib_var) ) |&gt;\n  # Fiber\n  rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Results', 'distrib_y_fib_w0.sas7bdat')) |&gt;\n  dplyr::select(!!distrib_var) )  |&gt;\n  # Potassium\n  rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Results', 'distrib_y_pota_w0.sas7bdat')) |&gt;\n  dplyr::select(!!distrib_var) ) \n\ndistrib_vita &lt;- \n  # Vitamin A (RAE)\n  haven::read_sas(file.path(path,'NCI', 'MCMC_vit_a', 'Results', 'distrib_y_rae_w0.sas7bdat')) |&gt;\n  dplyr::select(!!distrib_var)\n\n# ********************************************** #\n#            Append nutrient distrib             #\n# ********************************************** #\n\ndistrib_y &lt;- \n  rbind(distrib_pro,distrib_cavitd,\n        distrib_miscA,distrib_miscB,\n        distrib_vita) |&gt;\n  # rename protein variable for consistency\n  dplyr::mutate(\n    varname = ifelse(varname==\"proteins\",\"pro\",varname),\n    varname = ifelse(varname==\"proteins_kg\",\"pro_kg\",varname)\n  )\n\n   ## add labels \n    distrib_y$varname_f &lt;- \n      factor(distrib_y$varname,\n             levels = varname_list,\n             labels = varlabel_list\n             )\n  \n    distrib_y$drig_f &lt;- \n      factor(distrib_y$drig,\n             levels = drig_list,\n             labels = drig_label\n             )\n    \n  # clean\n  rm(list=c(\"distrib_pro\",\"distrib_cavitd\",\"distrib_miscA\",\"distrib_miscB\"))\n\n\n\n\nCode\n# ************************************************************************ #\n#                 Import SAS data on marginal Pr(X&lt;EAR)                    #\n# ************************************************************************ #\n\n  # note: mrg, marginal (crude population average)\n\n# ********************************************** #\n#                    Protein                     #\n# ********************************************** #\nmrg_pro &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_pro', 'Results', 'distrib_y_rel_wf.sas7bdat')) |&gt;\n  ### Hardcoded value for Pr(X&lt;EAR)\n  dplyr::filter(name==\"Prob1\") |&gt;\n  # Add nutrient identifier\n  dplyr::mutate(varname=\"pro\")\n\n# ********************************************** #\n#             Calcium and Vitamin D              #\n# ********************************************** #\nmrg_cavitd &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_ca_vit_d', 'Results', 'distrib_y_wf.sas7bdat')) |&gt; \n  dplyr::slice(grep(\"EAR\",name)) \n\n# ********************************************** #\n#         Iron, Zinc, Vit. B6, Vit. B12          #\n# ********************************************** #\n\nmrg_miscA &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Results', 'distrib_y_wf.sas7bdat')) |&gt; \n  dplyr::slice(grep(\"EAR\",name)) \n\n# ********************************************** #\n#        Dietary Folate Eq, Mg, K, Fibers        #\n# ********************************************** #\n\nmrg_miscB &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Results', 'distrib_y_wf.sas7bdat')) |&gt; \n  dplyr::slice(grep(\"EAR\",name)) \n\n# ********************************************** #\n#                Vitamin A (RAE)                 #\n# ********************************************** #\n\nmrg_rae &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_vit_a', 'Results', 'distrib_y_wf.sas7bdat')) |&gt; \n  dplyr::slice(grep(\"EAR\",name)) \n\n# ********************************************** #\n#            Append nutrient distrib             #\n# ********************************************** #\n\nmrg_all &lt;- \n  rbind(mrg_pro,mrg_cavitd,\n        mrg_miscA,mrg_miscB,\n        mrg_rae) |&gt;\n  # note: fibers and potassium (Pr(X&lt;Adequate Intake)) cannot appear here, since cut-point is not EAR\n  dplyr::filter(\n      !(varname %in% c(\"fibers\",\"pota\"))\n  )\n\n## add labels \nmrg_all$varname_f &lt;- \n  factor(mrg_all$varname,\n         levels = varname_list,\n         labels = varlabel_list )\n\n## remove units\nmrg_all &lt;-\n  mrg_all |&gt;\n   # remove units from &lt;varname_f&gt;\n    tidyr::separate(\n      col = varname_f,\n      into = c(\"varname_f\",\"unit\"),\n      sep = ', '\n    )\n\n# clean temporary \n rm(list=c(\"mrg_pro\",\"mrg_cavitd\",\"mrg_miscA\",\"mrg_miscB\",\"mrg_rae\"))\n \n mrg_all_drig0_ordered &lt;- \n   mrg_all |&gt;\n   dplyr::filter(drig==0) |&gt;\n   dplyr::arrange(desc(estimate)) \n \n \n # save data for further analyses\n save(mrg_all, file=file.path(res_dir,\"mrg_all.rdata\"))\n\n\nThe prevalence of inadequate nutrient intakes ranged from 1% (iron) to 96% (vitamin D; Figure 2). The prevalence of inadequate intakes was high for vitamin D, calcium, and magnesium (96%, 83%, 64%, respectively) and moderately high for vitamin B6, vitamin A, folate, and zinc (38%, 36%, 30%, 28%, respectively; Figure 2). Results were similar for most nutrients when stratified by DRI age and sex group (Supplemental Table 4).\n\n\nCode\n# *********************************************************************** #\n#              Make dot plot of Pr(X&lt;EAR), all respondents                #\n# *********************************************************************** #\n\n# load data\n load(file=file.path(res_dir,\"mrg_all.rdata\"))\n\n# generate figure \nmrg_prob_plot_all &lt;- \n  mrg_all |&gt;\n  dplyr::filter(drig==0) |&gt;\n  ggplot(aes(x = reorder(varname_f,estimate,na.rm=TRUE),y=estimate)) +\n  geom_point(size=4) +\n  geom_linerange(aes(ymin=lcl95, ymax=ucl95), stat=\"identity\") +\n  geom_text(aes(label=estimate_ci, fontface=\"bold\"),color=\"BLACK\",size=3,nudge_x = -0.3) + \n  labs(x=\"Nutrients\",y=\"Prevalence of inadequacy, %\") +\n  coord_flip(ylim=c(0,100))+ \n  theme_bw() + \n  theme_dotplotx() +\n  theme(legend.position = \"none\")\n\n# Show figure\nmrg_prob_plot_all\n\n# ********************************************** #\n#            Export graph as PDF/PNG             #\n# ********************************************** #\n\n  ggplot2::ggsave(file.path(ms_dir,\"Fig2_prob_ear.pdf\"),\n        plot=mrg_prob_plot_all, dpi=300, width=7,height=5, units=\"in\",scale=1.05,device = cairo_pdf)\n\n  ggplot2::ggsave(file.path(ms_dir,\"Fig2_prob_ear.png\"),\n         plot=mrg_prob_plot_all, dpi=300, width=7,height=5, units=\"in\",scale=1.05)\n\n\n\n\n\nFigure 2: Prevalence of inadequate nutrient intakes in 4,089 adults aged 65 years and older from the CCHS 2015 - Nutrition. Only nutrient intakes from foods were considered (i.e., excluding intakes from dietary supplement). Inadequate intakes are intakes below the age- and sex-specific Estimated Average Requirements (EAR). Potassium and fiber are not shown, because only Adequate Intakes (AI) values are available for these nutrients. All dietary intakes were modelled using the National Cancer Institute multivariate method to estimate usual intakes (see Methods). 95%CI were estimated using 500 bootstrap weight replicates. CCHS, Canadian Community Health Survey."
  },
  {
    "objectID": "9.1-HEFI19-NUT_ARTICLE.html#relationship-between-the-hefi-2019-score-and-nutrient-intakes",
    "href": "9.1-HEFI19-NUT_ARTICLE.html#relationship-between-the-hefi-2019-score-and-nutrient-intakes",
    "title": "Relationship between adherence to the 2019 Canada’s Food Guide recommendations on healthy food choices and nutrient intakes in older adults",
    "section": "Relationship between the HEFI-2019 Score and Nutrient Intakes",
    "text": "Relationship between the HEFI-2019 Score and Nutrient Intakes\n\n\nCode\n# *********************************************************************** #\n#         Import SAS data - linear regression estimates and plot          #\n# *********************************************************************** #\n\n# ********************************************** #\n#                    Protein                     #\n# ********************************************** #\nlinreg_plot_pro &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_pro', 'Results', 'lin_plot_allf.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0,\n                pred_id=as.numeric(gsub(\"pred\",\"\",name))\n  ) |&gt;\n  # add DRI group here\n  rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_pro', 'Results', 'lin_plot_drigf.sas7bdat'))) |&gt; \n  dplyr::mutate(varname=\"pro\") |&gt; \n  dplyr::arrange(drig)\n\n# ********************************************** #\n#             Calcium and Vitamin D              #\n# ********************************************** #\nlinreg_plot_catvitd &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_ca_vit_d', 'Results', 'lin_plot_allf.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0\n  ) |&gt;\n  # add DRI group here\n  rbind(haven::read_sas(\n      file.path(path,'NCI', 'MCMC_ca_vit_d', 'Results', 'lin_plot_drigf.sas7bdat'),\n                    col_select = -(`_MergeError_`))\n    ) |&gt; \n  dplyr::arrange(drig)\n\n# ********************************************** #\n#         Iron, Zinc, Vit. B6, Vit. B12          #\n# ********************************************** #\nlinreg_plot_miscA &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Results', 'lin_plot_allf.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0\n  ) |&gt;\n  # add DRI group here\n  rbind(haven::read_sas(\n      file.path(path,'NCI', 'MCMC_miscA', 'Results', 'lin_plot_drigf.sas7bdat'),\n                    col_select = -(`_MergeError_`))\n    ) |&gt; \n  dplyr::arrange(drig)\n\n# ********************************************** #\n#        Dietary Folate Eq, Mg, K, Fibers        #\n# ********************************************** #\nlinreg_plot_miscB &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Results', 'lin_plot_allf.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0\n  ) |&gt;\n  # add DRI group here\n  rbind(haven::read_sas(\n      file.path(path,'NCI', 'MCMC_miscB', 'Results', 'lin_plot_drigf.sas7bdat'),\n                    col_select = -(`_MergeError_`))\n    ) |&gt; \n  dplyr::arrange(drig)\n\n# ********************************************** #\n#                Vitamin A (RAE)                 #\n# ********************************************** #\n\nlinreg_plot_rae &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_vit_a', 'Results', 'lin_plot_allf.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0\n  ) |&gt;\n  # add DRI group here\n  rbind(haven::read_sas(\n      file.path(path,'NCI', 'MCMC_vit_a', 'Results', 'lin_plot_drigf.sas7bdat'),\n                    col_select = -(`_MergeError_`))\n    ) |&gt; \n  dplyr::arrange(drig)\n\n# ********************************************** #\n# Append all nutrient, remove useless variables  #\n# ********************************************** #\n\nlinreg_plot_all &lt;- \n  rbind(linreg_plot_pro,linreg_plot_catvitd,\n        linreg_plot_miscA,linreg_plot_miscB,\n        linreg_plot_rae) |&gt; \n  dplyr::select(-c(name,alpha,one_minus_half_alpha,\n            t_quant,tvalue,pvalue,svalue,`_ci`,`_se`,\n            estimate_se))\n\nrm(list=c(\"linreg_plot_pro\",\n          \"linreg_plot_catvitd\",\n          \"linreg_plot_miscA\",\n          \"linreg_plot_miscB\",\n          \"linreg_plot_rae\"))\n\n## add labels \nlinreg_plot_all$varname_f &lt;- \n  factor(linreg_plot_all$varname,\n         levels = varname_list,\n         labels = varlabel_list\n         )\n\nlinreg_plot_all$drig_f &lt;- \n  factor(linreg_plot_all$drig,\n         levels = drig_list,\n         labels = drig_label\n         )\n\nsave(linreg_plot_all,\n     file = file.path(res_dir,\"linreg_plot_all.rdata\"))\n\n# *********************************************************************** #\n#    Output subsample of observations from all mc_t_distrib_out data      #\n# *********************************************************************** #\n\n# wrap import into function (note: lengthy step due to large mc_t data)\nmc_t_import &lt;- function(){\n  \n  # note: we use the &lt;slice_mc_t_out&gt; for consistent output\n  \n  # Import HEFI + nutrient intake by MCMC models\n  mc_t_pro &lt;- \n    slice_mc_t_out(nutrient=\"proteins\",\n                  nutrient_label = \"pro\") |&gt; \n    dplyr::rename(estimate=proteins) |&gt; \n    dplyr::mutate(varname=\"pro\")\n    \n    #note: &lt;pivot_longer&gt; not used here since pro has only 1 variable\n  \n  mc_t_cavitd &lt;- \n    slice_mc_t_out(nutrient=c(\"calcium\",\"vit_d\"),\n                  nutrient_label = \"ca_vit_d\") |&gt; \n    tidyr::pivot_longer(cols=c(\"calcium\",\"vit_d\"),\n                 names_to = \"varname\",\n                 values_to = \"estimate\")\n  \n  mc_t_miscA &lt;- \n    slice_mc_t_out(nutrient=c(\"iron\",\"zinc\",\"vit_b6\",\"vit_b12\"),\n                  nutrient_label = \"miscA\") |&gt; \n    tidyr::pivot_longer(cols=c(\"iron\",\"zinc\",\"vit_b6\",\"vit_b12\"),\n                 names_to = \"varname\",\n                 values_to = \"estimate\")\n  \n    mc_t_miscB &lt;- \n    slice_mc_t_out(nutrient=c(\"dfe\",\"mg\",\"fibers\",\"pota\"),\n                  nutrient_label = \"miscB\") |&gt; \n    tidyr::pivot_longer(cols=c(\"dfe\",\"mg\",\"fibers\",\"pota\"),\n                 names_to = \"varname\",\n                 values_to = \"estimate\")\n    \n  mc_t_rae &lt;- \n    slice_mc_t_out(nutrient=\"rae\",\n                  nutrient_label = \"vit_a\")  |&gt; \n    dplyr::rename(estimate=rae) |&gt; \n    dplyr::mutate(varname=\"rae\")\n  \n  # Append all\n  \n  mc_t_subset &lt;-\n    rbind(mc_t_pro,mc_t_cavitd,\n          mc_t_miscA,mc_t_miscB,\n          mc_t_rae) \n  \n   ## add labels \n    mc_t_subset$varname_f &lt;- \n      factor(mc_t_subset$varname,\n             levels = varname_list,\n             labels = varlabel_list\n             )\n    mc_t_subset$drig_f &lt;- \n      factor(mc_t_subset$drig,\n             levels = drig_list,\n             labels = drig_label\n             )\n    \n    ## indicate output data\n    mc_t_subset$date &lt;- paste0(Sys.Date())\n\n  # Save\n  save(mc_t_subset,\n       file = file.path(res_dir,\"mc_t_subset.rdata\"))\n}\n\n# ********************************************** #\n#      Import and/or load mc_t subset data       #\n# ********************************************** #\n\n# run function only if &lt;mc_t_subset&gt; data not available\nif( file.exists(file.path(res_dir,\"mc_t_subset.rdata\"))==FALSE){\n  tictoc::tic(msg = \"loading and sampling &lt;NCI/MCMC_*/Model/mc_t_distrib_out0.sas7bdat&gt;\" )\n  mc_t_import()\n  tictoc::toc()\n}\n\n\nloading and sampling &lt;NCI/MCMC_*/Model/mc_t_distrib_out0.sas7bdat&gt;: 32.232 sec elapsed\n\n\nCode\n# load data in any case\nload(file.path(res_dir,\"mc_t_subset.rdata\"))\n\n\n\n\nCode\n# *********************************************************************** #\n#               Output reg. coef. estimate for t1t0 diff.                 #\n# *********************************************************************** #\n\n  # note: difference can either be presented in table, used to sort graph or both\n\n# ********************************************** #\n#                    Protein                     #\n# ********************************************** #\nlinreg_beta_pro &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_pro', 'Results', 'lin_beta_allf.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0) |&gt; \n  # add DRI group here\n  rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_pro', 'Results', 'lin_beta_drigf.sas7bdat'))) |&gt; \n  dplyr::mutate(varname=\"pro\") |&gt; \n  dplyr::arrange(drig) |&gt; \n  dplyr::filter(name!=\"r2\")\n\n\n# ********************************************** #\n#             Calcium and Vitamin D              #\n# ********************************************** #\nlinreg_beta_catvitd &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_ca_vit_d', 'Results', 'lin_beta_allf.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0\n  ) |&gt;\n  # add DRI group \n  rbind( haven::read_sas(\n      file.path(path,'NCI', 'MCMC_ca_vit_d', 'Results', 'lin_beta_drigf.sas7bdat'))\n    ) |&gt; \n  dplyr::arrange(drig) |&gt; \n  dplyr::filter(name!=\"r2\")\n\n# ********************************************** #\n#         Iron, Zinc, Vit. B6, Vit. B12          #\n# ********************************************** #\nlinreg_beta_miscA &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Results', 'lin_beta_allf.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0\n  ) |&gt;\n  # add DRI group here\n  rbind( haven::read_sas(\n      file.path(path,'NCI', 'MCMC_miscA', 'Results', 'lin_beta_drigf.sas7bdat'))\n    ) |&gt; \n  dplyr::arrange(drig) |&gt; \n  dplyr::filter(name!=\"r2\")\n\n# ********************************************** #\n#        Dietary Folate Eq, Mg, K, Fibers        #\n# ********************************************** #\nlinreg_beta_miscB &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Results', 'lin_beta_allf.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0\n  ) |&gt;\n  # add DRI group here\n  rbind(haven::read_sas(\n      file.path(path,'NCI', 'MCMC_miscB', 'Results', 'lin_beta_drigf.sas7bdat'))\n    ) |&gt; \n  dplyr::arrange(drig) |&gt; \n  dplyr::filter(name!=\"r2\")\n\n# ********************************************** #\n#                Vitamin A (RAE)                 #\n# ********************************************** #\n\nlinreg_beta_rae &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_vit_a', 'Results', 'lin_beta_allf.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0\n  ) |&gt;\n  # add DRI group here\n  rbind( haven::read_sas(\n      file.path(path,'NCI', 'MCMC_vit_a', 'Results', 'lin_beta_drigf.sas7bdat'))\n    ) |&gt; \n  dplyr::arrange(drig) |&gt; \n  dplyr::filter(name!=\"r2\")\n\n\n# ********************************************** #\n# Append all nutrient, remove useless variables  #\n# ********************************************** #\n\nlinreg_beta_all &lt;- \n  rbind(linreg_beta_pro,linreg_beta_catvitd,\n        linreg_beta_miscA,linreg_beta_miscB,\n        linreg_beta_rae) |&gt; \n  dplyr::select(-c(name,alpha,one_minus_half_alpha,\n            t_quant,tvalue,pvalue,svalue,`_ci`,`_se`,\n            estimate_se)) \n\n   ## add labels \n    linreg_beta_all$varname_f &lt;- \n      factor(linreg_beta_all$varname,\n             levels = varname_list,\n             labels = varlabel_list\n             )\n    linreg_beta_all$drig_f &lt;- \n      factor(linreg_beta_all$drig,\n             levels = drig_list,\n             labels = drig_label\n             )\n\nrm(list=c(\"linreg_beta_pro\",\n          \"linreg_beta_catvitd\",\n          \"linreg_beta_miscA\",\n          \"linreg_beta_miscB\",\n          \"linreg_beta_rae\"))\n\n# Make new estimate with proper rounding\nlinreg_beta_all &lt;- \n  linreg_beta_all |&gt; \n  dplyr::select(-estimate_ci) |&gt; \n  dplyr::mutate(\n    rounding = \n      case_when (\n       varname == 'pro' ~ 1,\n        varname == 'pro_kg' ~ 0.01,\n        varname == 'calcium' ~ 1,\n        varname == 'vit_d' ~ 0.1,\n        varname == 'iron' ~ 0.1,\n        varname == 'zinc' ~ 0.1,\n        varname == 'vit_b6' ~ 0.1,\n        varname == 'vit_b12' ~ 0.1,\n        varname == 'dfe' ~ 1,\n        varname == 'mg' ~ 1,\n        varname == 'pota' ~ 1,\n        varname == 'fibers' ~ 0.1,\n        varname == 'rae' ~ 1 ),\n    estimate_ci = makeEstimateCI(estimate,lcl95,ucl95,sep=\", \",rounding=rounding)\n  )\n\n# ********************************************** #\n#      Rescale coef. as a function of mean       #\n# ********************************************** #\n\n# Import distribution data to obtain mean (usual) intake\n\n  # note: &lt;distrib_y&gt; data created in chunk &lt;distrib-y-data&gt;\n\nlinreg_beta_all_ratio &lt;- \n  distrib_y |&gt; \n  # Select relevant variables\n  dplyr::select(varname,drig,Mean) |&gt; \n  # combine with lin. reg. beta, keeping only rows in that data\n  dplyr::right_join(linreg_beta_all) |&gt; \n  # calculate diff. as a proportion of mean\n  dplyr::mutate(\n    ratio = estimate/Mean\n  )\n\n# create vector of variable names according to ratio value\ny_sorted_beta_drig0 &lt;-\n  linreg_beta_all_ratio |&gt;\n  dplyr::filter(drig==0) |&gt;\n  dplyr::arrange(desc(ratio)) |&gt;\n   # remove units from varnames_f\n    tidyr::separate(\n      col = varname_f,\n      into = c(\"varname_f2\",\"unit\"),\n      sep = ', ',\n      remove=FALSE\n    ) |&gt;\n  dplyr::mutate(\n    varname_f2 = lapply(varname_f2,function(x) str_replace(x, \"^\\\\w{1}\", tolower) )\n  )\n\n# ********************************************** #\n#             Save intermediate data             #\n# ********************************************** #\n\nsave(linreg_beta_all,\n     file = file.path(res_dir,\"linreg_beta_all.rdata\"))\nsave(y_sorted_beta_drig0,\n     file = file.path(res_dir,\"y_sorted_beta_drig0.rdata\"))\n\n\nRelationships between the HEFI-2019 score and nutrient intakes are illustrated in Figure 3. Respondents with higher HEFI-2019 score had higher intakes of fiber, magnesium, vitamin B6, potassium, and protein, but lower intakes of vitamin D, vitamin B12, folate, and iron. The associations between the HEFI-2019 score and intakes of vitamin A, calcium, and zinc were weak or null. Table 1 presents the expected difference in nutrient intakes associated with an increase in HEFI-2019 score to the 90th percentile of the score distribution compared with median HEFI-2019 score. For example, increasing HEFI-2019 from the median to the 90th percentile of the score distribution was associated with a 3.4 g/day higher fiber intake (95%CI: 2.0, 4.8; Table 1. In contrast, the same HEFI-2019 score increase was associated with a 0.5 µ/day lower vitamin D intake (95%CI: -1.0, 0.0; Table 1).\n\n\n\nCode\n# *********************************************************************** #\n#              Linear regression with RCS - NUTRIENTS                     #\n# *********************************************************************** #\n\n# load intermediate data - ensures this chunk works regardless of prior execution\nload(file = file.path(res_dir,\"mc_t_subset.rdata\"))\nload(file = file.path(res_dir,\"linreg_plot_all.rdata\"))\nload(file = file.path(res_dir,\"y_sorted_beta_drig0.rdata\"))\n\n# Create new data/new factor variable with ordered nutrients according to value of ratio\nfacet_nut_data &lt;- \n  linreg_plot_all |&gt; \n  dplyr::filter(drig==0) \n\nfacet_nut_data$varname_f &lt;- \n  factor(facet_nut_data$varname,\n         levels = y_sorted_beta_drig0$varname,\n         labels = y_sorted_beta_drig0$varname_f )\n\nfacet_nut_color &lt;- \n  MetBrewer::met.brewer(\"Johnson\", \n                        n=length(unique(facet_nut_data$varname_f)), \n                        direction=-1)\n\n\n# Plot (Nutrient | HEFI-2019) relationship ordered by % change in mean intake \nlinreg_nut_all &lt;- \n  facet_nut_data |&gt;\n  ggplot(aes(x=HEFI2019_TOTAL_SCORE,y=estimate)) + \n  geom_point(data=mc_t_subset,\n             aes(x=HEFI2019_TOTAL_SCORE,y=estimate),alpha=0.3,shape=1) +\n  geom_ribbon(aes(ymin=lcl95,ymax=ucl95),alpha=0.1)+\n  geom_line(aes(color=varname_f), linewidth=1.05) +\n  geom_line(aes(x=HEFI2019_TOTAL_SCORE,y=lcl95,color=varname_f),linetype=\"longdash\") +\n  geom_line(aes(x=HEFI2019_TOTAL_SCORE,y=ucl95,color=varname_f),linetype=\"longdash\") +\n  scale_color_manual(values=facet_nut_color) +\n  scale_x_continuous(breaks=c(seq(10,80, by=10))) +\n  facet_wrap(~varname_f,scales=\"free_y\") +\n  labs(x=\"HEFI-2019 score based on usual intakes (/80), points\",\n       y=\"Usual nutrient intake\") +\n  theme_bw()+\n  theme(panel.grid.minor.x = element_blank(),\n        panel.grid.minor.y = element_blank(),\n        legend.position = \"none\")\n\n# Show figure\nlinreg_nut_all\n\n# ********************************************** #\n#            Export graph as PDF/PNG             #\n# ********************************************** #\n\n  ggplot2::ggsave(file.path(ms_dir,'Fig3_reg_hefi_nut.pdf'),\n        plot=linreg_nut_all, dpi=300, width=13.5,height=7.5, units=\"in\",scale=1,device = cairo_pdf)\n\n  ggplot2::ggsave(file.path(ms_dir,'Fig3_reg_hefi_nut.png'),\n         plot=linreg_nut_all, dpi=300, width=13.5,height=7.5, units=\"in\",scale=1)\n\n\n\n\n\nFigure 3: Linear regression of nutrient intake on the total HEFI-2019 score in 4,089 adults aged 65 years or more from the CCHS 2015 - Nutrition. A positive relationship indicates that greater HEFI-2019 scores are associated with greater nutrient intake, and inversely. For visualization purpose, data points are from a random sample of 200 respondents selected proportionally to sampling weights. All dietary intakes were modelled using the National Cancer Institute multivariate method to estimate usual intakes (see Methods). 95%CI were estimated using 500 bootstrap weight replicates. CCHS, Canadian Community Health Survey; HEFI-2019, Healthy Eating Food Index-2019.\n\n\n\n\n\n\n\nCode\n# *********************************************************************** #\n#           Generate table of regression coefficient estimates            #\n# *********************************************************************** #\n\n# ********************************************** #\n#        Calculate unweighted sample size        #\n# ********************************************** #\n\ntbl_freq_drig &lt;- \n  table(subset(hs_65y, energy&gt;0)$drig, dnn=\"drig\") |&gt;\n  data.frame() |&gt;\n  mutate(\n    Total    = scales::number(sum(Freq),big.mark=\",\"),\n    Freq_fmt = scales::number(Freq,big.mark=\",\")\n  )\n\n# ********************************************** #\n#                  Print table                   #\n# ********************************************** #\n\n# load \nload(file = file.path(res_dir,\"linreg_beta_all.rdata\"))\n\n# prepare\ntbl_linreg_beta &lt;- \n  linreg_beta_all |&gt; \n  dplyr::mutate(\n    # create proper labels for DRI age/sex group using the unweighted sample sizes\n    drig_f_n = \n      case_when(\n        drig == 0 ~ paste0(drig_f, \" (n=\", tbl_freq_drig[1,\"Total\"],\")\"),\n        drig == 12 ~ paste0(drig_f, \" (n=\", subset(tbl_freq_drig, drig==12,\"Freq_fmt\"),\")\"),\n        drig == 13 ~ paste0(drig_f, \" (n=\", subset(tbl_freq_drig, drig==13,\"Freq_fmt\"),\")\"),\n        drig == 14 ~ paste0(drig_f, \" (n=\", subset(tbl_freq_drig, drig==14,\"Freq_fmt\"),\")\"),\n        drig == 15 ~ paste0(drig_f, \" (n=\", subset(tbl_freq_drig, drig==15,\"Freq_fmt\"),\")\"),\n      )\n  ) |&gt;\n  # transpose data from long to wide \n  dplyr::select(varname_f, drig_f_n, estimate_ci) |&gt; \n  tidyr::pivot_wider(names_from=\"drig_f_n\",\n                     values_from= \"estimate_ci\") |&gt; \n  # generate table with gt()\n  gt::gt() |&gt;\n  gt::tab_spanner(label = \"Dietary Reference Intake group\",\n                  columns = 3:6) |&gt;\n  gt::cols_label(\n    varname_f = \"Nutrients\"\n  ) |&gt;\n  gt::tab_style(\n    style = list(\n      cell_text(weight = \"bold\")  ),\n    locations = cells_column_spanners(spanners=everything())\n  ) |&gt;\n  gt::tab_header(title= \"Usual nutrient intake difference between HEFI-2019 scores at the 90th percentile and the median of the HEFI-2019 score distribution in 4,089 adults aged 65 years and older from the CCHS 2015 - Nutrition\") |&gt;\n  gt::tab_footnote(\n    footnote =  \"Values are expected nutrient intake differences (95%CI) for a HEFI-2019 score at the 90th compared with the 50th percentile of the score distribution and were estimated using linear regression models.Estimates reflect the expected nutrient intake difference when HEFI-2019 scores are increased to correspond to the 90th percentile of the score distribution, compared with the median HEFI-2019 score. All dietary intakes were modelled using the National Cancer Institute multivariate method to estimate usual intakes (see Methods). 95%CI were estimated using 500 bootstrap weight replicates. Sample size indicate the number of respondents without applying sampling weights, but other estimates were weighted to reflect the Canadian population. CCHS, Canadian Community Health Survey; d, day; HEFI-2019, Healthy Eating Food Index-2019.\",\n    locations = cells_title(\"title\")\n  ) |&gt;\n  gtstyle()\n\n# *********************************************************************** #\n#  Use &lt;gtsave_select&gt; function to print table directly or save as docx   #\n# *********************************************************************** #\n\ngtsave_select(tbl_linreg_beta,paste0(\"Table 1. linear reg estimate\"),docx=\"N\")\n\n\n\n\n\n\nTable 1:  tbl-linreg-beta \n  \n    \n      Usual nutrient intake difference between HEFI-2019 scores at the 90th percentile and the median of the HEFI-2019 score distribution in 4,089 adults aged 65 years and older from the CCHS 2015 - Nutrition1\n    \n    \n    \n      Nutrients\n      Adults 65 y+ (n=4,089)\n      \n        Dietary Reference Intake group\n      \n    \n    \n      Males, 65 to 70 y (n=567)\n      Females, 65 to 70 y (n=720)\n      Males, 71 y+ (n=1,246)\n      Females, 71 y+ (n=1,556)\n    \n  \n  \n    Protein, g/d\n3 (-2, 8)\n2 (-4, 9)\n5 (-1, 11)\n2 (-4, 8)\n4 (-2, 10)\n    Calcium, mg/d\n4 (-50, 57)\n-16 (-96, 65)\n21 (-47, 89)\n-14 (-88, 60)\n25 (-38, 89)\n    Vitamin D, mcg/d\n-0.5 (-1.0, 0.0)\n-0.8 (-1.6, -0.1)\n-0.1 (-0.7, 0.5)\n-0.7 (-1.5, 0.0)\n-0.1 (-0.7, 0.6)\n    Iron, mg/d\n-0.2 (-1.0, 0.5)\n-0.6 (-1.8, 0.6)\n0.2 (-0.7, 1.1)\n-0.6 (-1.8, 0.6)\n0.3 (-0.5, 1.1)\n    Vitamin B12, mcg/d\n-0.3 (-0.7, 0.1)\n-0.4 (-0.9, 0.0)\n-0.1 (-0.7, 0.4)\n-0.4 (-0.8, 0.1)\n-0.1 (-0.6, 0.4)\n    Vitamin B6, mg/d\n0.1 (0.0, 0.2)\n0.1 (0.0, 0.2)\n0.1 (0.0, 0.3)\n0.1 (0.0, 0.2)\n0.1 (0.0, 0.2)\n    Zinc, mg/d\n0.0 (-0.7, 0.7)\n-0.4 (-1.5, 0.7)\n0.4 (-0.3, 1.2)\n-0.3 (-1.3, 0.6)\n0.5 (-0.2, 1.2)\n    Folate, DFE/d\n-13 (-39, 14)\n-15 (-56, 26)\n-6 (-36, 25)\n-16 (-55, 22)\n-2 (-31, 27)\n    Fiber, g/d\n3.4 (2.0, 4.8)\n4.5 (2.2, 6.8)\n3.0 (1.2, 4.8)\n4.3 (2.2, 6.4)\n3.0 (1.3, 4.7)\n    Magnesium, mg/d\n33 (14, 52)\n44 (14, 73)\n30 (6, 55)\n39 (13, 65)\n31 (9, 53)\n    Potassium, mg/d\n173 (17, 328)\n230 (6, 455)\n170 (-27, 368)\n214 (3, 424)\n178 (-7, 363)\n    Vitamin A, RAE/d\n16 (-37, 69)\n9 (-54, 71)\n26 (-54, 106)\n10 (-48, 68)\n26 (-42, 95)\n  \n  \n  \n    \n      1 Values are expected nutrient intake differences (95%CI) for a HEFI-2019 score at the 90th compared with the 50th percentile of the score distribution and were estimated using linear regression models.Estimates reflect the expected nutrient intake difference when HEFI-2019 scores are increased to correspond to the 90th percentile of the score distribution, compared with the median HEFI-2019 score. All dietary intakes were modelled using the National Cancer Institute multivariate method to estimate usual intakes (see Methods). 95%CI were estimated using 500 bootstrap weight replicates. Sample size indicate the number of respondents without applying sampling weights, but other estimates were weighted to reflect the Canadian population. CCHS, Canadian Community Health Survey; d, day; HEFI-2019, Healthy Eating Food Index-2019."
  },
  {
    "objectID": "9.1-HEFI19-NUT_ARTICLE.html#relationship-between-the-hefi-2019-score-and-nutrient-intake-inadequacy",
    "href": "9.1-HEFI19-NUT_ARTICLE.html#relationship-between-the-hefi-2019-score-and-nutrient-intake-inadequacy",
    "title": "Relationship between adherence to the 2019 Canada’s Food Guide recommendations on healthy food choices and nutrient intakes in older adults",
    "section": "Relationship between the HEFI-2019 Score and Nutrient Intake Inadequacy",
    "text": "Relationship between the HEFI-2019 Score and Nutrient Intake Inadequacy\n\nInadequate Nutrient Intakes\n\n\nCode\n# *********************************************************************** #\n#        Output Pr(X&lt;EAR | HEFI=t1),Pr(X&lt;EAR | HEFI=t0) and diff.         #\n# *********************************************************************** #\n\n# ********************************************** #\n#                    Protein                     #\n# ********************************************** #\n\nlogreg_beta_pro0 &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_pro', 'Reg', 'logr_mod_hefi_y06_raw0.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0,\n                t1perc=90,\n                t0perc=50) |&gt; \n  # add DRI group here\n  rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_pro', 'Reg_drig', 'logr_mod_hefi_y06_raw0.sas7bdat'))) |&gt; \n  dplyr::mutate(varname=\"pro\") |&gt; \n  dplyr::arrange(drig) |&gt;\n  dplyr::mutate(\n    varname = \"pro_kg\"\n  ) |&gt; \n  dplyr::select(-c(t1perc,t0perc))\n\nlogreg_beta_pro &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_pro', 'Results', 'log_beta_allf.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0) |&gt; \n  # add DRI group here\n  rbind( haven::read_sas(file.path(path,'NCI', 'MCMC_pro', 'Results', 'log_beta_drigf.sas7bdat'))) |&gt; \n  dplyr::mutate(varname=\"pro\") |&gt; \n  dplyr::arrange(drig) |&gt; \n  # keeping only Pr(X&lt;EAR)\n  dplyr::filter(outcome==\"binary_06\") |&gt;\n  dplyr::mutate(\n    varname = \"pro_kg\"\n  )\n\n# ********************************************** #\n#             Calcium and Vitamin D              #\n# ********************************************** #\n\n# Import base model with Pr(X&lt;EAR) at t1 and t0\ncavitd0 &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_ca_vit_d', 'Reg', 'logr_mod_y_ca_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"calcium\"\n  ) |&gt; \n rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_ca_vit_d', 'Reg', 'logr_mod_y_vitd_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"vit_d\"\n  )) |&gt; \n  dplyr::mutate(drig=0)\n\ncavitd_drig0 &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_ca_vit_d', 'Reg_drig', 'logr_mod_y_ca_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"calcium\"\n      ) |&gt;\n  rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_ca_vit_d', 'Reg_drig', 'logr_mod_y_vitd_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"vit_d\"\n      ) ) |&gt; \n  dplyr::select(-c(t0perc,t1perc))\n  \n  ## Append both\n  logreg_beta_catvitd0 &lt;- \n  rbind(cavitd0,cavitd_drig0)  \n  \n  ## clean \n  rm(list=c(\"cavitd0\",\"cavitd_drig0\"))\n\n# Import risk ratio\nlogreg_beta_catvitd &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_ca_vit_d', 'Results', 'log_beta_allf.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0\n  ) |&gt;\n  # add DRI group \n  rbind( haven::read_sas(\n      file.path(path,'NCI', 'MCMC_ca_vit_d', 'Results', 'log_beta_drigf.sas7bdat'))\n    ) |&gt; \n  dplyr::arrange(drig) |&gt; \n  # some formatting for consistency\n  dplyr::rename(outcome=varname) |&gt; \n  dplyr::mutate(\n    varname = case_when(\n      outcome ==\"binary_ca\" ~ \"calcium\",\n      outcome ==\"binary_vitd\" ~ \"vit_d\"\n    )\n  )\n\n# ********************************************** #\n#         Iron, Zinc, Vit. B6, Vit. B12          #\n# ********************************************** #\n\n# Import base model with Pr(X&lt;EAR) at t1 and t0\nmiscA0 &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Reg', 'logr_mod_y_iron_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"iron\"\n  ) |&gt; \n rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Reg', 'logr_mod_y_zinc_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"zinc\"\n  )) |&gt; \n rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Reg', 'logr_mod_y_b6_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"vit_b6\"\n  )) |&gt; \n rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Reg', 'logr_mod_y_b12_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"vit_b12\"\n  )) |&gt; \n  dplyr::mutate(drig=0)\n\nmiscA_drig0 &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Reg_drig', 'logr_mod_y_iron_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"iron\"\n  ) |&gt; \n rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Reg_drig', 'logr_mod_y_zinc_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"zinc\"\n  )) |&gt; \n rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Reg_drig', 'logr_mod_y_b6_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"vit_b6\"\n  )) |&gt; \n rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Reg_drig', 'logr_mod_y_b12_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"vit_b12\"\n  )) |&gt; \n  dplyr::select(-c(t0perc,t1perc))\n  \n  ## Append both\n  logreg_beta_miscA0 &lt;- \n  rbind(miscA0,miscA_drig0)  \n  \n  ## clean \n  rm(list=c(\"miscA0\",\"miscA_drig0\"))\n\n# Import risk ratio\nlogreg_beta_miscA &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Results', 'log_beta_allf.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0\n  ) |&gt;\n  # add DRI group here\n  rbind( haven::read_sas(\n      file.path(path,'NCI', 'MCMC_miscA', 'Results', 'log_beta_drigf.sas7bdat'))\n    ) |&gt; \n  dplyr::arrange(drig) |&gt; \n  # some formatting for consistency\n  dplyr::rename(outcome=varname) |&gt; \n  dplyr::mutate(\n    varname = case_when(\n      outcome ==\"binary_iron\" ~ \"iron\",\n      outcome ==\"binary_zinc\" ~ \"zinc\",\n      outcome ==\"binary_b6\" ~ \"vit_b6\",\n      outcome ==\"binary_b12\" ~ \"vit_b12\"\n    )\n  )\n\n# ********************************************** #\n#        Dietary Folate Eq, Mg, K, Fibers        #\n# ********************************************** #\n\n# Import base model with Pr(X&lt;EAR) at t1 and t0\nmiscB0 &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Reg', 'logr_mod_y_dfe_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"dfe\"\n  ) |&gt; \n rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Reg', 'logr_mod_y_mg_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"mg\"\n  )) |&gt; \n rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Reg', 'logr_mod_y_pota_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"pota\"\n  )) |&gt; \n rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Reg', 'logr_mod_y_fib_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"fibers\"\n  )) |&gt; \n  dplyr::mutate(drig=0)\n\nmiscB_drig0 &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Reg_drig', 'logr_mod_y_dfe_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"dfe\"\n  ) |&gt; \n rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Reg_drig', 'logr_mod_y_mg_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"mg\"\n  )) |&gt; \n rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Reg_drig', 'logr_mod_y_pota_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"pota\"\n  )) |&gt; \n rbind(haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Reg_drig', 'logr_mod_y_fib_raw0.sas7bdat')) |&gt; \n  dplyr::mutate(\n    varname = \"fibers\"\n  )) |&gt; \n  dplyr::select(-c(t0perc,t1perc))\n  \n  ## Append both\n  logreg_beta_miscB0 &lt;- \n  rbind(miscB0,miscB_drig0)  \n  \n  ## clean \n  rm(list=c(\"miscB0\",\"miscB_drig0\"))\n\n# Import risk ratio\nlogreg_beta_miscB &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Results', 'log_beta_allf.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0\n  ) |&gt;\n  # add DRI group here\n  rbind(haven::read_sas(\n      file.path(path,'NCI', 'MCMC_miscB', 'Results', 'log_beta_drigf.sas7bdat'))\n    ) |&gt; \n  dplyr::arrange(drig)  |&gt; \n  # some formatting for consistency\n  dplyr::rename(outcome=varname) |&gt; \n  dplyr::mutate(\n    varname = case_when(\n      outcome ==\"binary_dfe\" ~ \"dfe\",\n      outcome ==\"binary_fib\" ~ \"fibers\",\n      outcome ==\"binary_pota\" ~ \"pota\",\n      outcome ==\"binary_mg\" ~ \"mg\"\n    )\n  )\n\n# ********************************************** #\n#                Vitamin A (RAE)                 #\n# ********************************************** #\n\n# Import base model with Pr(X&lt;EAR) at t1 and t0\nlogreg_beta_rae0 &lt;- \n  (haven::read_sas(file.path(path,'NCI', 'MCMC_vit_a', 'Reg', 'logr_mod_y_rae_raw0.sas7bdat')) |&gt; \n   dplyr::mutate(drig=0) \n   ) |&gt; \n  rbind(\n    haven::read_sas(file.path(path,'NCI', 'MCMC_vit_a', 'Reg_drig', 'logr_mod_y_rae_raw0.sas7bdat')) |&gt; \n    dplyr::select(-c(t1perc,t0perc)) \n  ) |&gt; \n  dplyr::mutate(varname=\"rae\")\n\n# Import risk ratio\nlogreg_beta_rae &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_vit_a', 'Results', 'log_beta_allf.sas7bdat')) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0\n  ) |&gt;\n  # add DRI group here\n  rbind( haven::read_sas(\n      file.path(path,'NCI', 'MCMC_vit_a', 'Results', 'log_beta_drigf.sas7bdat'))\n    ) |&gt; \n  dplyr::arrange(drig)  |&gt; \n  # some formatting for consistency\n  dplyr::rename(outcome=varname) |&gt; \n  dplyr::mutate(\n    varname = case_when(\n      outcome ==\"binary_rae\" ~ \"rae\"\n    )\n  )\n\n\n# ********************************************** #\n# Append all nutrient, remove useless variables  #\n# ********************************************** #\n\n# Pr(X&lt;EAR) at t1 and t0\nlogreg_beta_all0 &lt;- \n  rbind(logreg_beta_pro0,logreg_beta_catvitd0,\n        logreg_beta_miscA0,logreg_beta_miscB0,\n        logreg_beta_rae0) |&gt; \n  dplyr::select(-c(replicate,z,log_beta0)) |&gt; \n  # calculate t1 vs t0 difference to assess consistency\n  dplyr::mutate(\n    t1t0_diff = t1-t0\n  )\n\n   ## add labels \n    logreg_beta_all0$varname_f &lt;- \n      factor(logreg_beta_all0$varname,\n             levels = varname_list,\n             labels = varlabeltidy_list\n             )\n    \n    logreg_beta_all0$drig_f &lt;- \n      factor(logreg_beta_all0$drig,\n             levels = drig_list,\n             labels = drig_label\n             )\n\n# Risk ratio estimate\nlogreg_beta_all &lt;- \n  rbind(logreg_beta_pro,logreg_beta_catvitd,\n        logreg_beta_miscA,logreg_beta_miscB,\n        logreg_beta_rae) |&gt; \n  dplyr::select(-c(label,alpha,one_minus_half_alpha,\n            t_quant,tvalue,pvalue,svalue,`_ci`,`_se`,\n            estimate_se,estimate_ci)) |&gt;\n  # remove fibers and potassium (AI) which cannot be shown in this figure\n  dplyr::filter(\n    !(varname %in% c(\"fibers\",\"pota\"))\n  )\n\n   ## add labels \n    logreg_beta_all$varname_f &lt;- \n      factor(logreg_beta_all$varname,\n             levels = varname_list,\n             labels = varlabeltidy_list\n             )\n    logreg_beta_all$drig_f &lt;- \n      factor(logreg_beta_all$drig,\n             levels = drig_list,\n             labels = drig_label\n             )\n    \n## clean temporary\nrm(list=c(\"logreg_beta_pro\",\n          \"logreg_beta_catvitd\",\n          \"logreg_beta_miscA\",\n          \"logreg_beta_miscB\",\n          \"logreg_beta_rae\",\n          \"logreg_beta_pro0\",\n          \"logreg_beta_catvitd0\",\n          \"logreg_beta_miscA0\",\n          \"logreg_beta_miscB0\",\n          \"logreg_beta_rae0\"))\n\n# Prepare ordered, formatted data for in text citation purpose\nlogreg_beta_drig0_ordered &lt;- \n  logreg_beta_all |&gt;\n  dplyr::filter(drig==0,name==\"risk_diff\") |&gt;\n  dplyr::arrange(estimate) |&gt;\n  dplyr::mutate(\n    varname_f2 = lapply(varname_f,function(x) str_replace(x, \"^\\\\w{1}\", tolower) )\n  )\n\n# ********************************************** #\n#  Save data to re-use in Supplemental Material  #\n# ********************************************** #\n\nsave(logreg_beta_all0,\n     file=file.path(res_dir,\"logreg_beta_all0.rdata\"))\nsave(logreg_beta_all,\n     file=file.path(res_dir,\"logreg_beta_all.rdata\"))\n\n\nFigure 4 presents the prevalence and the difference in the prevalence of inadequate nutrient intake according to the HEFI-2019 score. An increase of HEFI-2019 score to the 90th percentile of the score distribution compared with median HEFI-2019 score was associated with reduction of 19.8, 12.7, and 4.7 percentage points in the prevalence of inadequate nutrient intakes for magnesium, vitamin B6, and protein, respectively. Inversely, the same HEFI-2019 score increase was associated with a minor increase in the prevalence of inadequate vitamin D intakes (prevalence difference, +2.6%; 95%CI: 1.1, 4.0%). The prevalence of inadequate iron intake was 0% and thus unaffected by hypothetical HEFI-2019 score change. For vitamin A, zinc, vitamin B12, calcium and folate, the 95%CI were wide and compatible with both increase and decrease in the prevalence of inadequate intakes (Figure 4).\n\n\nCode\n# *********************************************************************** #\n#    Cleveland dot plot with Pr(X&lt;EAR) at t1, t0 and t1/t0 risk diff.     #\n# *********************************************************************** #\n  \n  # note1: data for this plot was made in chunk above\n  # note2: to facilitate interpretations, nutrient are ordered by descending difference\n  # note3: due to very low Pr(X&lt;EAR) in some cases, absolute difference better reflect change than ratios\n\n# load data\nload(file=file.path(res_dir,\"logreg_beta_all0.rdata\"))\nload(file=file.path(res_dir,\"logreg_beta_all.rdata\"))\n\n# remove &lt;/d&gt; in varname labels\nlogreg_beta_all0 &lt;- \n  logreg_beta_all0 |&gt;\n  dplyr::mutate(\n    varname_f = gsub(\"/d\",\"\",varname_f)\n  ) |&gt;\n  # remove fibers and potassium (AI) which cannot be shown in this figure\n  dplyr::filter(\n    !(varname %in% c(\"fibers\",\"pota\"))\n  )\n\n# ********************************************** #\n#         Panel A - Pr(X&lt;EAR) at t1, t0          #\n# ********************************************** #\n\n  # note: both prevalence must be in the `wide` format to be plotted on the same line\n\npanelA &lt;- \n  logreg_beta_all0 |&gt;\n  dplyr::filter(drig==0) |&gt;\n  ggplot() +\n  geom_point(aes(x = y0, y = reorder(varname_f,desc(risk_diff),na.rm=TRUE),shape=\"50th perc.\"),size=4) +\n  geom_point(aes(x = y1, y = reorder(varname_f,desc(risk_diff),na.rm=TRUE),shape=\"90th perc.\"),size=4) + \n  scale_shape_manual(values=c(1,16)) + \n  scale_x_continuous(labels = scales::percent) +\n  labs(y=NULL,\n       x=\"Prevalence of\\ninadequate intakes, %\",shape = \"\") +\n  theme_dotplotx()+ \n  theme(axis.text.x = element_text(color=\"black\"),\n        axis.text.y = element_text(color=\"black\"),\n        legend.key=element_blank(),\n        legend.position=\"top\") \n\n# ********************************************** #\n#           Panel B - t1/t0 risk ratio           #\n# ********************************************** #\n\npanelB &lt;- \n  logreg_beta_all |&gt;\n  dplyr::filter(drig==0,name==\"risk_diff\") |&gt;\n  # create labels with estimates and 95ci\n  dplyr::mutate(\n    estimate_ci = makeEstimateCI(estimate,lcl95,ucl95,sep=\", \",rounding=0.1)\n  ) |&gt;\n  # graph\n  ggplot(aes(x = estimate, y = reorder(varname_f,desc(estimate),na.rm=TRUE))) +\n  geom_point(shape=15,size=4) +\n  geom_vline(xintercept = 0, linetype=\"dashed\", color=\"GRAY\") +\n  geom_linerange(aes(xmin=lcl95, xmax=ucl95), stat=\"identity\") + \n  geom_text(aes(x=estimate, label=estimate_ci, fontface= \"bold\"),\n            color=\"BLACK\", vjust = 2 ,size=3) +\n  labs(y=NULL,x=\"Prevalence difference,\\n% point (95%CI)\") +\n  theme_dotplotx() + \n  theme(axis.text.y=element_blank(),\n        axis.text.x = element_text(color=\"BLACK\"))\n  \n# ********************************************** #\n#               Combine Panel A, B               #\n# ********************************************** #\n\n  #note: combination performed with 'patchwork' package\n\nlogregplot &lt;- \n  panelA + panelB \n\nlogregplot\n\n# ********************************************** #\n#            Export graph as PDF/PNG             #\n# ********************************************** #\n\n  ggplot2::ggsave(file.path(ms_dir,'Fig4_hypothetical_inrease.pdf'),\n        plot=logregplot, dpi=300, width=10,height=7, units=\"in\",scale=0.8,device = cairo_pdf)\n  \n  ggplot2::ggsave(file.path(ms_dir,'Fig4_hypothetical_inrease.png'),\n         plot=logregplot, dpi=300, width=10,height=7, units=\"in\",scale=0.8)\n\n\n\n\n\nFigure 4: Prevalence of inadequate intakes and difference for HEFI-2019 scores at the 90th compared with the 50th percentile of the score distribution in 4,089 adults aged 65 years or more from the CCHS 2015 - Nutrition. Inadequate intakes are intakes below the age- and sex-specific Estimated Average Requirements (EAR). Potassium and fiber are not shown, because only Adequate Intakes (AI) values are available for these nutrients. All dietary intakes were modelled using the National Cancer Institute multivariate method to estimate usual intakes (see Methods). 95%CI were estimated using 500 bootstrap weight replicates. CCHS, Canadian Community Health Survey; HEFI-2019, Healthy Eating Food Index-2019.\n\n\n\n\n\nHypothetical higher Estimated Average Requirements for protein\n\n\nCode\n  # note: intakes above current recommendations may be relevant. Output these values\n\n# ********************************************** #\n#     Look at what 1xStDev was in CCHS-2015      #\n# ********************************************** #\n\n  #haven::read_sas(file.path(path,'NCI', 'MCMC_pro', 'Results', 'distrib_y_rel_w0.sas7bdat')) |&gt;\n  #dplyr::select(replicate,drig,varname,Mean,StdDev,Variance,Max,Min,Pctile50)\n\n  #note: StdDev ~ 0.24 g/kg for all respondents. Results not further use.\n\n# *********************************************************************** #\n#        Output Pr(X&lt;EAR | HEFI=t1),Pr(X&lt;EAR | HEFI=t0) and diff.         #\n# *********************************************************************** #\n\nlogreg_beta_pro0 &lt;- \n  rbind(# include current EAR for comparison purpose\n        haven::read_sas(file.path(path,\"NCI\",\"MCMC_pro\",\"Reg\",\"logr_mod_hefi_y06_raw0.sas7bdat\")),\n        # 0.8g/kg/d (ie, potential EAR for recommendations at 1.0g/kg/d)\n        haven::read_sas(file.path(path,\"NCI\",\"MCMC_pro\",\"Reg\",\"logr_mod_hefi_y08_raw0.sas7bdat\")),\n        # 1.0g/kg/d (ie, potential EAR for recommendations at 1.1 or 1.2g/kg/d)\n        haven::read_sas(file.path(path,\"NCI\",\"MCMC_pro\",\"Reg\",\"logr_mod_hefi_y10_raw0.sas7bdat\"))\n        ) |&gt;\n  # Add nutrient, drig identifier\n  dplyr::mutate(drig=0,\n                t1perc=90,\n                t0perc=50) |&gt;\n  # add DRI group here\n  rbind(haven::read_sas(file.path(path,\"NCI\",\"MCMC_pro\",\"Reg_drig\",\"logr_mod_hefi_y06_raw0.sas7bdat\")),\n        haven::read_sas(file.path(path,\"NCI\",\"MCMC_pro\",\"Reg_drig\",\"logr_mod_hefi_y08_raw0.sas7bdat\")),\n        haven::read_sas(file.path(path,\"NCI\",\"MCMC_pro\",\"Reg_drig\",\"logr_mod_hefi_y10_raw0.sas7bdat\"))\n        ) |&gt;\n  dplyr::arrange(drig) |&gt;\n  dplyr::mutate(\n    varname = \"pro_kg\"\n  ) |&gt;\n  dplyr::select(-c(t1perc,t0perc,replicate,z)) |&gt;\n  tidyr::separate(col=\"label\", into=c(\"outcome\",\"label\"),sep=\"[|]\") |&gt;\n  # Restrict to overall group for simplicity\n  dplyr::filter(drig==0) |&gt;\n  dplyr::mutate(\n     # multiply * 100 for simplicity\n    #across(c(\"risk_diff\",\"y0\",\"y1\"), function(x) x*100),\n    risk_diff = risk_diff * 100\n  )\n\nlogreg_beta_pro &lt;- \n  haven::read_sas(paste0(path,\"/NCI/MCMC_pro/Results/log_beta_allf.sas7bdat\")) |&gt;\n  # Add nutrient, DRIg identifier\n  dplyr::mutate(drig=0) |&gt;\n  # add DRI group here\n  rbind(haven::read_sas(file.path(path,\"NCI\",\"MCMC_pro\",\"Results\",\"log_beta_drigf.sas7bdat\"))) |&gt; \n  dplyr::mutate(varname=\"pro_kg\") |&gt;\n  dplyr::arrange(drig) |&gt;\n  # keeping only Pr(X&lt;EAR)\n  dplyr::filter(outcome %in% c(\"binary_06\",\"binary_08\",\"binary_10\"))  |&gt; \n  dplyr::select(-c(label,alpha,one_minus_half_alpha,\n            t_quant,tvalue,pvalue,svalue,`_ci`,`_se`,\n            estimate_se,estimate_ci)) |&gt;\n  # Restrict to overall group for simplicity\n  dplyr::filter(drig==0 & name==\"risk_diff\")\n\n# ********************************************** #\n#  Save data to re-use in Supplemental Material  #\n# ********************************************** #\n\n save(logreg_beta_pro0, file=file.path(res_dir,\"logreg_beta_pro0.rdata\"))\n save(logreg_beta_pro, file=file.path(res_dir,\"logreg_beta_pro.rdata\"))\n\n\nCompared with the median HEFI-2019 score, scores at the 90th percentile decreased the proportion of respondents with protein intakes below hypothetical EAR of 0.8 g/kg/day and 1.0 g/kg/day (Supplemental Figure 2). For 0.8 g/kg/d, the prevalence of inadequacy decreased from 29.3% to 18.5% (prevalence difference: -10.8; 95%CI: -20.0, -1.6). For 1.0 g/kg/d, the prevalence decreased from 64.7% to 50.8% (prevalence difference: -13.9; 95%CI: -25.0, -2.8)."
  },
  {
    "objectID": "9.1-HEFI19-NUT_ARTICLE.html#adequate-intakes-for-fiber-and-potassium",
    "href": "9.1-HEFI19-NUT_ARTICLE.html#adequate-intakes-for-fiber-and-potassium",
    "title": "Relationship between adherence to the 2019 Canada’s Food Guide recommendations on healthy food choices and nutrient intakes in older adults",
    "section": "Adequate Intakes for Fiber and Potassium",
    "text": "Adequate Intakes for Fiber and Potassium\n\n\nCode\n# *********************************************************************** #\n#       Output Pr(X&gt;=AI | HEFI=t1),Pr(X&gt;=AI | HEFI=t0) and diff.          #\n# *********************************************************************** #\n\n  #note: AI stands for \"Adequate Intake\"\n\nlogreg_data_AI &lt;-\n  haven::read_sas(file.path(path,\"NCI\",\"MCMC_miscB\",\"Reg\",\"Bootstraps\",\"_logr_mod_hefi_y_rawbs.sas7bdat\")) |&gt;\n  # remove invalid replicate + keep potassium, fibers\n  dplyr::filter(replicate!=484 &\n                  (varname ==\"binary_pota\" | varname ==\"binary_fib\") ) |&gt;\n  # keep only essential variables for clarity\n  dplyr::select(replicate, varname, exp_y0, exp_y1) |&gt;\n  dplyr::mutate(\n    # inverse odds ratio to get Pr(X&gt;=x)\n    exp_y0_inverse = 1/exp_y0,\n    exp_y1_inverse = 1/exp_y1,\n    # calculate risk (exp/(1+exp))\n    y0 = exp_y0_inverse / (1+exp_y0_inverse), \n    y1 = exp_y1_inverse / (1+exp_y1_inverse),\n    # calculate risk difference, ratio\n    risk_diff = y1 - y0 ,\n    risk_ratio = y1 / y0 \n  )\n\n# split original vs. replicate \nlogreg0 &lt;- logreg_data_AI[logreg_data_AI$replicate==0,]\nlogregbs &lt;- logreg_data_AI[logreg_data_AI$replicate&gt;0,]\n\n# calculate Standard Error for risk ratio (note: done manually to be consistent with SAS)\nlogregAI&lt;- \n  logregbs |&gt;\n  dplyr::group_by(varname) |&gt;\n  dplyr::summarise(\n    se = sd(risk_diff)\n    ) |&gt; \n  merge(logreg0) |&gt;\n  dplyr::mutate(\n    # define normal quantile\n    qnorm = 1.96,\n    # calculate 95%ci\n    lcl95 = risk_diff - se*1.96 ,\n    ucl95 = risk_diff + se*1.96 ,\n    # multiply * 100 for simplicity\n    across(c(\"y0\",\"y1\",\"risk_diff\",\"lcl95\",\"ucl95\"), function(x) x*100),\n    # make formatted estimate, if need be\n    estimate_ci = makeEstimateCI(risk_diff,lcl95,ucl95,sep=\", \",rounding=0.1)\n  )  \n\n#clean temporary\n  rm(list=c(\"logreg_data_AI\",\"logreg0\",\"logregbs\"))\n\n\nCompared with the median HEFI-2019 score, score at the 90th percentile increased the proportion of respondents with intakes above the adequate intake for both fibers and potassium. For fibers, the prevalence increased from 6.5% to 20.5% (prevalence difference: +14.1; 95%CI: 5.1, 23.0). For potassium, the prevalence increased from 25.1% to 36.8% (prevalence difference: +11.7; 95%CI: 2.2, 21.1)."
  },
  {
    "objectID": "9.2-HEFI19-NUT_OSM.html",
    "href": "9.2-HEFI19-NUT_OSM.html",
    "title": "Supplemental Material",
    "section": "",
    "text": "Code\n## Is the output for MS word?\nOUTPUT_WORD &lt;- \"N\"\n\n# ********************************************** #\n#                Markdown set-up                 #\n# ********************************************** #\n\nknitr::opts_chunk$set(echo = TRUE,\n                      message = FALSE,\n                      warning = FALSE,\n                      dpi = 300,\n                      out.width = \"80%\",\n                      fig.env = \"figure\",\n                      fig.align = \"center\"\n                      )\n\n## suppress scientific notation\noptions(scipen = 9999)\n\n## file path \npath &lt;- here::here()\n\n# ********************************************** #\n#              Relative file paths               #\n# ********************************************** #\n\n# create directory to save figures/table/data, if needed\nif(dir.exists(here::here(\"Manuscript\"))==FALSE){\n  dir.create(here::here(\"Manuscript\"))\n}\nif(dir.exists(here::here(\"Data\", \"Results\"))==FALSE){\n  dir.create(here::here(\"Data\", \"Results\"))\n}\n\nsuppl_dir &lt;- here::here(\"Manuscript\")\nres_dir &lt;- here::here(\"Data\",\"Results\")\n\n\n# *********************************************** #\n#                   Packages                      #\n# *********************************************** #\n\n## data management\nlibrary(haven)\nlibrary(tidyverse)\n\n## results presentation\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(gt)\nlibrary(tinytex)\nlibrary(MetBrewer)\n\n## saving gt object vs. printing directly\n  gtsave_select &lt;- function(object,label,docx){\nif(docx == \"Y\"){\n  # save as docx\n object |&gt;\n    gt::gtsave(here::here(suppl_dir,paste0(label,\".docx\")))\n} else {\n  # print gt object directly\n  object\n}\n  \n}\n\n# *********************************************** #\n#                Common labels                    #\n# *********************************************** #\n\n### DRI groups\ndrig_list &lt;- \n  c(0,12,13,14,15)\n\ndrig_label &lt;- \n  c('Adults 65y+',\n  'Males, 65 to 70 y',\n  'Females, 65 to 70 y',\n  'Males, 71 y+',\n  'Females, 71 y+')\n\ndrig_plotlabel &lt;- \n  c('12'='Males, 65 to 70 years',\n'13'='Females, 65 to 70 years',\n'14'='Males, 71 or older',\n'15'='Females, 71 or older')\n\n### Nutrient variable names\nvarname_list &lt;- \n  c('pro',\n    'pro_kg',\n    'calcium',\n    'vit_d',\n    'iron',\n    'zinc',\n    'vit_b6',\n    'vit_b12',\n    'dfe',\n    'mg',\n    'pota',\n    'fibers',\n    'rae')\n\nvarlabeltidy_list &lt;- \n  c( pro='Protein', \n    pro_kg='Protein', \n    calcium='Calcium', \n    vit_d='Vitamin D', \n    iron='Iron', \n    zinc='Zinc', \n    vit_b6='Vitamin B6', \n    vit_b12='Vitamin B12', \n    #dfe='Dietary folate equivalent', \n    dfe='Folate',\n    mg='Magnesium', \n    pota='Potassium', \n    fibers='Fiber',\n    rae='Vitamin A'\n  )\n  \n# ********************************************** #\n#                   Functions                    #\n# ********************************************** #\n\n# &lt;tolower1&gt;: lower case,but only for first letter (works for 1 word)\n  tolower1 &lt;- function(x) {\n    substr(x, 1, 1) &lt;- tolower(substr(x, 1, 1))\n    return(x) \n  }\n\n# &lt;makeEstimateSD&gt; to format mean (SD) (within mutate step for example)\nmakeEstimateSD &lt;- function(est,var,rounding=0.1){\n  paste0( scales::number(est,accuracy = rounding,big.mark=\",\"),\" (\",scales::number(var,accuracy = rounding,big.mark=\",\",),\")\")\n}\n\n# &lt;makeEstimateCI&gt; to format Estimate (95%CI) (within mutate step for example)\nmakeEstimateCI &lt;- function(est,lcl,ucl,sep=\" to \",numsep=\",\",rounding=0.1){\npaste0( scales::number(est,accuracy = rounding,big.mark=numsep),\n        \" (\",scales::number(lcl,accuracy = rounding,big.mark=numsep),\n          sep,\n        scales::number(ucl,accuracy = rounding,big.mark=numsep),\n          \")\")  \n}\n\nmake95ci &lt;- function(x,sep=\", \",rounding=0.01,reverse=0,add_suffix=\"\"){\n  lcl &lt;- paste0(scales::number(x$lcl95,accuracy=rounding),add_suffix)\n  ucl &lt;- paste0(scales::number(x$ucl95,accuracy=rounding),add_suffix)\n  if(reverse==0){\n  # Regular ordering, estimate (LCL to UCL)\n    return(\n      noquote( paste0(lcl,sep,ucl) )\n    )\n  } else {\n    # Reversed ordering, estimate (UCL to LCL)\n    return(\n      noquote( paste0(ucl,sep,lcl) )\n    )\n  }\n  \n}\n\n\n# Cleveland dot plot\ntheme_dotplotx &lt;- function() {\n  ggplot2::theme( ## remove the vertical grid lines\n    panel.grid.major.x = element_blank() ,\n    panel.grid.minor.x = element_blank() ,\n    ## explicitly set the horizontal lines (or they will disappear too)\n    panel.grid.major.y = element_line(color=\"black\", linetype = 3),\n    axis.text.y = element_text(size=rel(1.2),color=\"black\"),\n    axis.text.x = element_text(size=rel(1.2),color=\"black\"),\n    ## use a white backgrounsd\n    panel.background = element_rect(fill = \"white\", colour = NA),\n    panel.border = element_rect(fill = NA, colour = \"grey20\"))\n}\n\n## GT Table style\n  gtstyle &lt;- function(gtobject,footnote_marker=\"numbers\"){\n    gtobject |&gt;\n      gt::tab_style(\n        style = list(\n          cell_text(weight = \"bold\")  ),\n        locations = cells_row_groups(groups = everything())\n      ) |&gt;\n      gt::opt_align_table_header(\"left\") |&gt;\n      gt::opt_footnote_marks(marks=footnote_marker)\n  }\n  \n# Additional R functions\n  source(here::here(\"Macros\",\"statDistrib.R\"))\n\n# ********************************************** #\n#         Initialize Suppl. Table index          #\n# ********************************************** #\n  \n  stable_index &lt;- 1"
  },
  {
    "objectID": "9.2-HEFI19-NUT_OSM.html#the-healthy-eating-food-index-hefi-2019",
    "href": "9.2-HEFI19-NUT_OSM.html#the-healthy-eating-food-index-hefi-2019",
    "title": "Supplemental Material",
    "section": "The Healthy Eating Food Index (HEFI) 2019",
    "text": "The Healthy Eating Food Index (HEFI) 2019\nSupplemental Table 1 presents the HEFI-2019 (Brassard et al. 2022) components, points and thresholds for scores.\n\n\nCode\n# ********************************************** #\n#        Prepare table using manual data         #\n# ********************************************** #\n\ntab_hefi &lt;-\n  readxl::read_xlsx(path=file.path(res_dir,\"table_data.xlsx\"),sheet=\"score\") |&gt;\n  gt::gt() |&gt;\n  gt::cols_label(\n    no = \"No.\",\n    name = \"Component name\",\n    measurement = \"Measurement (ratio)\",\n    points = \"Maximum Points\",\n    unit = \"Unit\",\n    min = \"Standard for minimum score\",\n    max = \"Standard for maximum score\"\n  ) |&gt; \n  gt::tab_style(\n    style = list(\n      cell_text(weight = \"bold\")  ),\n    locations = cells_column_labels(columns=everything())\n  ) |&gt; \n  gt::tab_style(\n    style = list(\n      cell_text(style=\"italic\")  ),\n    locations = cells_body(columns=2)\n  ) |&gt;\n  gt::tab_header(\n       title = paste0(\"Supplemental Table \",stable_index,\". Healthy Eating Food Index (HEFI)-2019 components, points and standards for scoring\")) |&gt;\n  gt::tab_footnote(\n     footnote = \"All vegetables and fruits regardless of saturated fat, sodium or free sugar content; excludes fruit juice (i.e., considered as sugary drinks in CFG-2019).\",\n     locations = cells_body(columns=name,rows= 1)) |&gt;\n     gt::tab_footnote(\n     footnote = \"Total foods include all foods consumed as well as beverages considered in protein foods (i.e., unsweetened milk and unsweetened plant-based beverages that contain protein); excludes all other beverages as well as solid fats, oils and spreads and culinary ingredients (e.g., spices and baking soda).\",\n     locations = cells_body(columns=measurement,rows=c(1:2,4) )\n   ) |&gt;\n   gt::tab_footnote(\n     footnote = \"Foods where the first ingredient is either whole grains or whole wheat, regardless of saturated fat, sodium or free sugar content.\",\n     locations = cells_body(columns=name,rows= 3)\n   ) |&gt;\n   gt::tab_footnote(\n     footnote = \"Foods where the first ingredient is a grain (whole or not) regardless of saturated fat, sodium or free sugar content.\",\n     locations = cells_body(columns=measurement,rows= 3)\n   ) |&gt;\n   gt::tab_footnote(\n     footnote = \"All protein foods regardless of fat, sodium or sugars content; excludes processed meats (i.e., not considered protein foods in CFG-2019) and sweetened milks (i.e., considered as sugary drinks in CFG-2019).\",\n     locations = cells_body(columns=name,rows= 4)\n   ) |&gt;\n   gt::tab_footnote(\n     footnote = \"All plant-based protein foods, regardless of saturated fat, sodium or free sugar content.\",\n     locations = cells_body(columns=name,rows= 5 )\n   ) |&gt;\n   gt::tab_footnote(\n     footnote = \"Unsweetened beverages include unsweetened coffee and tea, unsweetened milk and unsweetened plant-based beverages. Total beverages include water (plain or carbonated), coffee, tea, milk and plant-based beverages, fruit and vegetable juices, alcoholic drinks, artificially sweetened beverages and sugary drinks.\",\n     locations = cells_body(columns=measurement,rows= 6)\n   )  |&gt;\n   gt::tab_footnote(\n     footnote = \"Approximately the 15th percentile of intake based on data (single 24-h dietary recall) in Canadians from the 2015 CCHS – Nutrition.\",\n     locations = cells_body(columns=min,rows= 7 )\n   ) |&gt;\n   gt::tab_footnote(\n     footnote = \"Corresponds to the 1st percentile of unsaturated to saturated fats ratios among simulated diets developed to be fully consistent with all recommendations in CFG-2019. \",\n     locations = cells_body(columns=max,rows= 7 )\n   ) |&gt;\n   gt::tab_footnote(\n     footnote = \"Approximately the 85th percentile of intake based on data (single 24-h dietary recall) in Canadians from the 2015 CCHS – Nutrition. \",\n     locations = cells_body(columns=min,rows= 8:9 )\n   ) |&gt;\n   gt::tab_footnote(\n     footnote = \"Standard for maximum points based on the Chronic Disease Risk Reduction for 14+ years (i.e., 2300 mg) over the 90th percentile of usual energy intakes in respondents 2 years and older from the 2015 CCHS – Nutrition (i.e., approximately 2600 kcal).\",\n     locations = cells_body(columns=max,rows= 10 )\n   ) |&gt;\n   # gt::tab_source_note(\n   #    source_note = \"Table adapted from Brassard et al. Appl Physiol Nutr Metab. 2022. CCHS, Canadian Community Health Survey; CFG-2019, Canada's food guide 2019; HEFI-2019, Healthy Eating Food Index 2019; RA, Reference Amounts (amount of food usually eaten by an individual at one sitting); %E, percent of total energy.\") |&gt;\n  # note: for some reason, gt() failed to render when the source is added here.\n   gtstyle(footnote_marker=\"numbers\")\n\n# *********************************************************************** #\n#  Use &lt;gtsave_select&gt; function to print table directly or save as docx   #\n# *********************************************************************** #\n\ngtsave_select(tab_hefi,paste0(\"SupplTable \",stable_index,\". hefi2019\"),OUTPUT_WORD)\n\n\n\n\n\n\nSupplemental Table 1:  tbl-hefi \n  \n    \n      Supplemental Table 1. Healthy Eating Food Index (HEFI)-2019 components, points and standards for scoring\n    \n    \n    \n      No.\n      Component name\n      Measurement (ratio)\n      Maximum Points\n      Unit\n      Standard for minimum score\n      Standard for maximum score\n    \n  \n  \n    1\nVegetables and fruits1\nTotal vegetables and fruits / Total foods2\n20\nRA/RA\nNo vegetables and no fruits\n≥ 0.50\n    2\nWhole-grain foods\nTotal whole-grain foods / Total foods2\n5\nRA/RA\nNo whole-grain foods\n≥ 0.25\n    3\nGrain foods ratio3\nTotal whole-grain foods / Total grain foods4\n5\nRA/RA\nNo whole-grain foods\n= 1.0\n    4\nProtein foods5\nTotal protein foods / Total foods2\n5\nRA/RA\nNo protein foods\n≥ 0.25\n    5\nPlant-based protein foods6\nPlant-based protein foods / Total protein foods\n5\nRA/RA\nNo plant-based protein foods\n&gt; 0.50\n    6\nBeverages\n(Plain water including carbonated + unsweetened beverages) / Total beverages7\n10\ng/g\nNo water and no unsweetened beverages\n= 1.0\n    7\nFatty acids ratio\n(Mono- + polyunsaturated fat) / Total saturated fat\n5\ng/g\n≤ 1.18\n≥ 2.69\n    8\nSaturated fats\nTotal saturated fat / energy\n5\n%E (kcal/kcal)\n≥ 15%E10\n&lt; 10%E\n    9\nFree sugars\nTotal free sugars / energy\n10\n%E (kcal/kcal)\n≥ 20%E10\n&lt; 10%E\n    10\nSodium\nTotal sodium / energy\n10\nmg / kcal\n≥ 2.0\n&lt; 0.911\n  \n  \n  \n    \n      1 All vegetables and fruits regardless of saturated fat, sodium or free sugar content; excludes fruit juice (i.e., considered as sugary drinks in CFG-2019).\n    \n    \n      2 Total foods include all foods consumed as well as beverages considered in protein foods (i.e., unsweetened milk and unsweetened plant-based beverages that contain protein); excludes all other beverages as well as solid fats, oils and spreads and culinary ingredients (e.g., spices and baking soda).\n    \n    \n      3 Foods where the first ingredient is either whole grains or whole wheat, regardless of saturated fat, sodium or free sugar content.\n    \n    \n      4 Foods where the first ingredient is a grain (whole or not) regardless of saturated fat, sodium or free sugar content.\n    \n    \n      5 All protein foods regardless of fat, sodium or sugars content; excludes processed meats (i.e., not considered protein foods in CFG-2019) and sweetened milks (i.e., considered as sugary drinks in CFG-2019).\n    \n    \n      6 All plant-based protein foods, regardless of saturated fat, sodium or free sugar content.\n    \n    \n      7 Unsweetened beverages include unsweetened coffee and tea, unsweetened milk and unsweetened plant-based beverages. Total beverages include water (plain or carbonated), coffee, tea, milk and plant-based beverages, fruit and vegetable juices, alcoholic drinks, artificially sweetened beverages and sugary drinks.\n    \n    \n      8 Approximately the 15th percentile of intake based on data (single 24-h dietary recall) in Canadians from the 2015 CCHS – Nutrition.\n    \n    \n      9 Corresponds to the 1st percentile of unsaturated to saturated fats ratios among simulated diets developed to be fully consistent with all recommendations in CFG-2019. \n    \n    \n      10 Approximately the 85th percentile of intake based on data (single 24-h dietary recall) in Canadians from the 2015 CCHS – Nutrition. \n    \n    \n      11 Standard for maximum points based on the Chronic Disease Risk Reduction for 14+ years (i.e., 2300 mg) over the 90th percentile of usual energy intakes in respondents 2 years and older from the 2015 CCHS – Nutrition (i.e., approximately 2600 kcal).\n    \n  \n\n\n\n\n\nCode\nstable_index &lt;- stable_index+1\n\n\nTable adapted from Brassard et al. Appl Physiol Nutr Metab. 2022. CCHS, Canadian Community Health Survey; CFG-2019, Canada’s food guide 2019; HEFI-2019, Healthy Eating Food Index 2019; RA, Reference Amounts (amount of food usually eaten by an individual at one sitting); %E, percent of total energy."
  },
  {
    "objectID": "9.2-HEFI19-NUT_OSM.html#usual-food-and-nutrient-intakes",
    "href": "9.2-HEFI19-NUT_OSM.html#usual-food-and-nutrient-intakes",
    "title": "Supplemental Material",
    "section": "Usual food and nutrient intakes",
    "text": "Usual food and nutrient intakes\nSupplemental Table 2 and Table 3 presents estimated means and percentile of the distribution of foods, beverages and nutrients considered in the HEFI-2019 score.\n\n\nCode\n# *********************************************************************** #\n#       Import data for descriptive table of dietary constituents         #\n# *********************************************************************** #\n\n# Read mcmc data and save as &lt;rds&gt; for efficiency purpose\nif(file.exists(file.path(res_dir,\"usintake_mc_t_out0.rds\"))==FALSE){\n  ## record time\n  tictoc::tic(msg = \"loading &lt;NCI/MCMC_score/Model/_usintake_mc_t_out0.sas7bdat&gt;\")\n  ## read mcmc data on external drive once, write as .rds file for future use\n  haven::read_sas(file.path(path, 'NCI', 'MCMC_score', 'Model', '_usintake_mc_t_out0.sas7bdat')) |&gt;\n    ### drop some variables as only dietary intake data used here\n    select(-c(weight_nw_sumw, starts_with(\"HEFI\"), starts_with(\"RATIO\"),\n              catscore, starts_with(\"Prob\"), energy_unit)) |&gt;\n  saveRDS(file = file.path(res_dir,\"usintake_mc_t_out0.rds\"))\n  ## show time\n  tictoc::toc()\n} else {\n  ## file already exists, do nothing else\n  message(\"note: &lt;usintake_mc_t_out0.rds&gt; data found in &lt;./Data/Results/&gt;\")\n}\n\n    # note: the SAS format &lt;.sas7bdat&gt; produces ~ 1.5-folder larger data\n\n# read rds file, apply some formatting\nmcmc &lt;- \n  readRDS(file = file.path(res_dir,\"usintake_mc_t_out0.rds\")) |&gt;\n  mutate(\n    milk_ra = milk/258\n  ) |&gt;\n  # note: could keep both variables, but focus on RA here for simplicity and consistency\n  select(-milk) |&gt;\n  rename(milk=milk_ra)\n\n# Generate distribution of all dietary constituents\n\n# ******************************* #\n#       loop &lt;statDistrib&gt;        #\n# ******************************* #\n\n# Objective: given a data, loop distrib of all components\n\n# create list of dietary constituents of interest:\ndietary_constituents_list &lt;- c(\"wg\", \"pfpb\", \"otherbevs\", \"milk\", \"rg\", \"vf\", \"otherfoods\", \"pfab\",\n         \"water\", \"mufa\", \"pufa\", \"sfa\", \"freesugars\", \"sodium\", \"energy\", \"totfoodsRA\", \"SUG_PERC\", \"SFA_PERC\", \"SODDEN\")\n\nfood_list &lt;- c(\"vf\", \"wg\", \"pfpb\", \"pfab\", \"otherbevs\", \"milk\", \"water\", \"rg\", \"otherfoods\",\n          \"totfoodsRA\")\n\nnutrients_list &lt;- c(\"mufa\", \"pufa\", \"sfa\", \"SFA_PERC\", \"freesugars\", \"SUG_PERC\", \"sodium\", \"SODDEN\", \"energy\")\n\n# loop function\nloop_statDistrib &lt;- function(indata, variables, weighting, replicnum = 0) {\n  \n  #  The function loop_statDistrib takes in a dataset indata (assumed to be a data.frame), a vector of variable names variables, a variable name for the weighting column weighting, and an optional replicnum parameter to indicate the replication number. It loops through each variable in variables, applies the &lt;statDistrib&gt; function to that variable using the indata[[variables[i]]] syntax, and stores the results in a list. Finally, it combines all the results into a single data.frame with additional columns for replicnum, Variable, and Index. The resulting data.frame contains summary statistics (mean, standard deviation, percentiles) for each variable, weighted by the values in the weighting column.\n  \n  # initialize an empty list to store the results\n  results &lt;- list()\n  \n  # loop through each variable and run the function\n  message(\"loop_statDistrib: processing \",appendLF = FALSE)\n  for (i in seq_along(variables)) {\n    current_var &lt;- indata[[variables[i]]]\n    result &lt;- statDistrib(current_var, w = indata[[weighting]])\n    result$Index &lt;- i\n    result$Variable &lt;- variables[i]\n    results[[i]] &lt;- result\n    message(\".\",appendLF = FALSE)\n  }\n  message(\"Done!\")\n  \n  # note: could have used purrr for the distrib loop.\n  \n  # combine the results into a single data frame\n  results_df &lt;- do.call(rbind, results)\n  \n  # add replicnum and reorder columns\n  results_df_r &lt;- data.frame(Replicate = replicnum,\n                             Variable = results_df$Variable,\n                             Index = results_df$Index,\n                             Mean = results_df$Mean,\n                             StdDev = results_df$StdDev,\n                             setNames(as.list(results_df[, 3:101]), paste0(\"Pctile\", 1:99))\n  )\n  \n  # return the final data frame\n  return(results_df_r)\n}\n\n# ********************************************** #\n#     Call function to loop distrib analysis     #\n# ********************************************** #\n\n#  all dietary constituents\ndistrib_w &lt;- \n  loop_statDistrib(indata    = mcmc,\n                   variables = dietary_constituents_list,\n                   weighting = \"weight_nw_sumw_div\") |&gt;\n  mutate(\n    ## indicate rounding\n    decimals = case_when(\n       Variable %in% c(\"otherbevs\", \"water\",\"sodium\", \"mufa\", \"pufa\", \"sfa\", \"freesugars\", \"energy\") ~ 1, \n      .default = 0.1 \n    ),\n    ## create combine estimates of mean+sd\n    mean_sd = makeEstimateSD(Mean,StdDev, rounding = decimals),\n    ## Classify foods/nutrients\n    type = ifelse(Variable %in% nutrients_list, \"Nutrients\", \"Food and beverages\"),\n    ## indicate if foods and beverages \n    cfg  = case_when(\n      Variable %in% c(nutrients_list) ~ NA,\n      Variable %in% c(\"otherbevs\", \"rg\", \"otherfoods\") ~ \"Not recommended in CFG\",\n      Variable %in% c(\"totfoodsRA\") ~ \"Total\",\n      .default = \"Recommended in CFG\")\n  )\n\n\n# save data to avoid re-running\nsave(distrib_w,\n     file = file.path(res_dir,\"usual_diet_distrib_w.rdata\"))\n\n\n\n\nCode\n# *********************************************************************** #\n#               Generate additional formatting for tables                 #\n# *********************************************************************** #\n\n# load data\nload(file.path(res_dir,\"usual_diet_distrib_w.rdata\"))\n\n# select percentiles\npctile_list &lt;- c(\"Pctile1\", \"Pctile5\", \"Pctile10\", \"Pctile25\", \"Pctile50\", \"Pctile75\", \"Pctile90\", \"Pctile95\", \"Pctile99\")\n\n# add labels and order variables\ndistrib_w$Variable_f &lt;-\n  factor(distrib_w$Variable,\n         levels = \n           c('vf','wg','pfab','pfpb', 'milk',\n             'water','otherbevs', 'rg','otherfoods', 'totfoodsRA',\n             'mufa','pufa', 'sfa', 'SFA_PERC', 'freesugars',\n             'SUG_PERC','sodium', 'SODDEN','energy'),\n         labels =\n           c(\n             'Vegetables and fruits, RA/d',\n             'Whole-grain foods, RA/d',\n             'Protein foods, animal-based, RA/d',\n             'Protein foods, plant-based, RA/d',\n             'Unsweetened milk, RA/d',\n             'Water and healthy beverages, ml/d',\n             'SSBs, alcohol and fruit juice, ml/d',\n             'Non-whole grain foods, RA/d',\n             'Other low nutritive value foods, RA/d',\n             'Total foods, RA/d',\n             'MUFA, g',\n             'PUFA, g',\n             'SFA, g',\n             'SFA, %E',\n             'Free sugars, g',\n             'Free sugars, %E',\n             'Sodium, mg',\n             'Sodium, g/1000 kcal',\n             'Energy, kcal'))\n\n\n\n\nCode\n# See &lt;descr-intake-tbl&gt; chunk for data preparation\n\n# *********************************************************************** #\n#                           Food and beverages                            #\n# *********************************************************************** #\n\ntab_descr_food &lt;-\n  distrib_w |&gt;\n  filter(type!=\"Nutrients\") |&gt;\n  select(cfg, Variable_f, mean_sd, all_of(pctile_list)) |&gt;\n  arrange(Variable_f) |&gt;\n  group_by(cfg) |&gt;\n  gt::gt() |&gt;\n  gt::fmt_number(columns = all_of(pctile_list), rows= c(1:5, 8:10), decimals = 1)  |&gt;\n  gt::fmt_number(columns = all_of(pctile_list), rows= c(6:7), decimals = 0)  |&gt;\n  gt::tab_spanner(\n    label = \"Percentile\",\n    columns = all_of(pctile_list)\n  ) |&gt;\n  gt::cols_label(\n    Variable_f = \"Categories\",\n    mean_sd = \"Mean (SD)\",\n    Pctile1 = 1, Pctile5 = 5, Pctile10 = 10, Pctile25 = 25, Pctile50 = 50,\n    Pctile75 = 75, Pctile90 = 90, Pctile95 = 95, Pctile99 = 99 \n  ) |&gt;\n  gt::tab_style(\n    style = cell_text(weight=\"bold\"),\n    locations = cells_column_labels(columns=everything())\n  ) |&gt;\n  gt::tab_style(\n    style = cell_text(weight=\"bold\"),\n    locations = cells_column_spanners(spanners=everything())\n  ) |&gt;\n  gt::tab_header(title = paste0(\"Supplemental Table \",stable_index,\". Estimated means and percentiles of food and beverage categories considered in the HEFI-2019 score in adults aged 65 years or more from the CCHS 2015 - Nutrition\")) |&gt;\n  gt::tab_footnote(\n    footnote = \"All estimated means and percentiles reflect usual or long-term dietary intakes and were modelled jointly using the National Cancer Institute Markov Chain Monte Carlo (MCMC) multivariate method (see Methods section). Adapted from Statistics Canada, Canadian Community Health Survey- Nutrition: Public Use Microdata File, 2015, June 2023. This does not constitute an endorsement by Statistics Canada of this product. CCHS, Canadian Community Health Survey; CFG, Canada's Food Guide 2019; d, day; HEFI-2019, Healthy Eating Food Index-2019; RA, Reference Amounts (amount of food usually eaten by an individual at one sitting).\",\n    locations = cells_title(\"title\")\n  )  |&gt;\n  gt::tab_footnote(\n    footnote = \"The total includes all categories of foods and milk, but excludes water and healthy beverages as well as SSBs, alcohol and fruit juice. 1 RA of milk equals to 250 ml.\",\n    locations = cells_row_groups(groups=\"Total\")\n  ) |&gt;\n  gtstyle()\n\n# *********************************************************************** #\n#  Use &lt;gtsave_select&gt; function to print table directly or save as docx   #\n# *********************************************************************** #\n  \ngtsave_select(tab_descr_food,paste0(\"SupplTable \",stable_index,\". descr_food\"),OUTPUT_WORD)\n\n\n\n\n\n\nSupplemental Table 2:  tbl-descr-food \n  \n    \n      Supplemental Table 2. Estimated means and percentiles of food and beverage categories considered in the HEFI-2019 score in adults aged 65 years or more from the CCHS 2015 - Nutrition1\n    \n    \n    \n      Categories\n      Mean (SD)\n      \n        Percentile\n      \n    \n    \n      1\n      5\n      10\n      25\n      50\n      75\n      90\n      95\n      99\n    \n  \n  \n    \n      Recommended in CFG\n    \n    Vegetables and fruits, RA/d\n3.5 (1.5)\n1.0\n1.5\n1.8\n2.4\n3.3\n4.3\n5.5\n6.3\n8.2\n    Whole-grain foods, RA/d\n0.9 (0.6)\n0.0\n0.1\n0.1\n0.4\n0.8\n1.3\n1.7\n2.0\n2.5\n    Protein foods, animal-based, RA/d\n2.1 (0.9)\n0.6\n0.9\n1.1\n1.5\n2.0\n2.6\n3.3\n3.7\n4.6\n    Protein foods, plant-based, RA/d\n0.4 (0.3)\n0.0\n0.1\n0.1\n0.2\n0.3\n0.6\n0.9\n1.1\n1.6\n    Unsweetened milk, RA/d\n0.5 (0.5)\n0.0\n0.0\n0.1\n0.2\n0.4\n0.8\n1.2\n1.6\n2.4\n    Water and healthy beverages, ml/d\n1,150 (563)\n238\n402\n513\n741\n1,064\n1,461\n1,897\n2,196\n2,855\n    \n      Not recommended in CFG\n    \n    SSBs, alcohol and fruit juice, ml/d\n335 (277)\n1\n14\n36\n119\n278\n480\n705\n864\n1,226\n    Non-whole grain foods, RA/d\n1.7 (0.8)\n0.2\n0.5\n0.7\n1.1\n1.6\n2.1\n2.7\n3.0\n3.8\n    Other low nutritive value foods, RA/d\n4.1 (2.7)\n0.7\n1.1\n1.5\n2.2\n3.4\n5.2\n7.5\n9.2\n13.4\n    \n      Total2\n    \n    Total foods, RA/d\n13.2 (4.1)\n6.1\n7.6\n8.5\n10.3\n12.7\n15.5\n18.6\n20.7\n25.5\n  \n  \n  \n    \n      1 All estimated means and percentiles reflect usual or long-term dietary intakes and were modelled jointly using the National Cancer Institute Markov Chain Monte Carlo (MCMC) multivariate method (see Methods section). Adapted from Statistics Canada, Canadian Community Health Survey- Nutrition: Public Use Microdata File, 2015, June 2023. This does not constitute an endorsement by Statistics Canada of this product. CCHS, Canadian Community Health Survey; CFG, Canada's Food Guide 2019; d, day; HEFI-2019, Healthy Eating Food Index-2019; RA, Reference Amounts (amount of food usually eaten by an individual at one sitting).\n    \n    \n      2 The total includes all categories of foods and milk, but excludes water and healthy beverages as well as SSBs, alcohol and fruit juice. 1 RA of milk equals to 250 ml.\n    \n  \n\n\n\n\n\nCode\nstable_index &lt;- stable_index+1\n\n\n\n\nCode\n# See &lt;descr-intake-tbl&gt; chunk for data preparation\n\n# *********************************************************************** #\n#                               Nutrients                                 #\n# *********************************************************************** #\n\ntab_descr_nut &lt;-\n  distrib_w |&gt;\n  filter(type==\"Nutrients\") |&gt;\n  select(Variable_f, mean_sd, all_of(pctile_list)) |&gt;\n  arrange(Variable_f) |&gt;\n  gt::gt() |&gt;\n  gt::fmt_number(columns = all_of(pctile_list), rows= c(4, 6, 8), decimals = 1)  |&gt;\n  gt::fmt_number(columns = all_of(pctile_list), rows= c(1:3, 5, 7, 9), decimals = 0)  |&gt;\n  gt::tab_spanner(\n    label = \"Percentile\",\n    columns = all_of(pctile_list)\n  ) |&gt;\n  gt::cols_label(\n    Variable_f = \"Nutrients\",\n    mean_sd = \"Mean (SD)\",\n    Pctile1 = 1, Pctile5 = 5, Pctile10 = 10, Pctile25 = 25, Pctile50 = 50,\n    Pctile75 = 75, Pctile90 = 90, Pctile95 = 95, Pctile99 = 99\n    ) |&gt;\n  gt::tab_style(\n    style = cell_text(weight=\"bold\"),\n    locations = cells_column_labels(columns=everything())\n  ) |&gt;\n  gt::tab_style(\n    style = cell_text(weight=\"bold\"),\n    locations = cells_column_spanners(spanners=everything())\n  ) |&gt;\n  gt::tab_header(title = paste0(\"Supplemental Table \",stable_index,\". Estimated means and percentiles of nutrients considered in the HEFI-2019 score in adults aged 65 years or more from the CCHS 2015 - Nutrition.\")) |&gt;\n  gt::tab_footnote(\n    footnote = \"All estimated means and percentiles reflect usual or long-term dietary intakes and were modelled jointly using the National Cancer Institute Markov Chain Monte Carlo (MCMC) multivariate method (see Methods section). Adapted from Statistics Canada, Canadian Community Health Survey- Nutrition: Public Use Microdata File, 2015, June 2023. This does not constitute an endorsement by Statistics Canada of this product. CCHS, Canadian Community Health Survey; d, day; E, energy; HEFI-2019, Healthy Eating Food Index-2019; %E, percent of total energy.\",\n    locations = cells_title(\"title\")\n  ) |&gt;\n  gtstyle()\n\n# *********************************************************************** #\n#  Use &lt;gtsave_select&gt; function to print table directly or save as docx   #\n# *********************************************************************** #\n  \ngtsave_select(tab_descr_nut,paste0(\"SupplTable \",stable_index,\". descr_nut\"),OUTPUT_WORD)\n\n\n\n\n\n\nSupplemental Table 3:  tbl-descr-nut \n  \n    \n      Supplemental Table 3. Estimated means and percentiles of nutrients considered in the HEFI-2019 score in adults aged 65 years or more from the CCHS 2015 - Nutrition.1\n    \n    \n    \n      Nutrients\n      Mean (SD)\n      \n        Percentile\n      \n    \n    \n      1\n      5\n      10\n      25\n      50\n      75\n      90\n      95\n      99\n    \n  \n  \n    MUFA, g\n23 (7)\n10\n13\n15\n18\n22\n27\n32\n36\n44\n    PUFA, g\n13 (4)\n6\n8\n9\n10\n12\n15\n18\n20\n24\n    SFA, g\n21 (7)\n9\n11\n13\n16\n20\n24\n30\n33\n40\n    SFA, %E\n11.1 (2.0)\n7.0\n8.0\n8.6\n9.7\n11.0\n12.4\n13.8\n14.7\n16.6\n    Free sugars, g\n46 (26)\n7\n14\n18\n28\n41\n58\n79\n95\n132\n    Free sugars, %E\n10.7 (4.5)\n2.2\n4.1\n5.3\n7.5\n10.3\n13.4\n16.6\n18.7\n23.2\n    Sodium, mg\n2,431 (621)\n1,277\n1,530\n1,684\n1,977\n2,367\n2,824\n3,269\n3,551\n4,095\n    Sodium, g/1000 kcal\n1.5 (0.2)\n1.0\n1.1\n1.2\n1.3\n1.5\n1.6\n1.8\n1.9\n2.2\n    Energy, kcal\n1,663 (428)\n862\n1,043\n1,152\n1,355\n1,618\n1,926\n2,239\n2,440\n2,833\n  \n  \n  \n    \n      1 All estimated means and percentiles reflect usual or long-term dietary intakes and were modelled jointly using the National Cancer Institute Markov Chain Monte Carlo (MCMC) multivariate method (see Methods section). Adapted from Statistics Canada, Canadian Community Health Survey- Nutrition: Public Use Microdata File, 2015, June 2023. This does not constitute an endorsement by Statistics Canada of this product. CCHS, Canadian Community Health Survey; d, day; E, energy; HEFI-2019, Healthy Eating Food Index-2019; %E, percent of total energy.\n    \n  \n\n\n\n\n\nCode\nstable_index &lt;- stable_index+1"
  },
  {
    "objectID": "9.2-HEFI19-NUT_OSM.html#relationship-between-food-and-beverage-categories-of-the-hefi-2019-and-nutrient-intakes",
    "href": "9.2-HEFI19-NUT_OSM.html#relationship-between-food-and-beverage-categories-of-the-hefi-2019-and-nutrient-intakes",
    "title": "Supplemental Material",
    "section": "Relationship between food and beverage categories of the HEFI-2019 and nutrient intakes",
    "text": "Relationship between food and beverage categories of the HEFI-2019 and nutrient intakes\nSupplemental Figure 1 presents the energy-adjusted correlation among food and beverage categories contributing to the HEFI-2019 and nutrient intakes.\n\n\nCode\n# *********************************************************************** #\n#                  Generate correlation heat map figure                   #\n# *********************************************************************** #\n\n# Load data created in &lt;corr-data&gt; in manuscript quarto file\nload(file = file.path(res_dir, \"suppl_corr_t_melted.rdata\"))\n\n# ********************************************** #\n#              Figure using ggplot2              #\n# ********************************************** #\n\ncorr_heatmap &lt;-\n  suppl_corr_t_melted |&gt;\n  ggplot(aes(x=variable_f, y=nutrient_f, fill = value)) +\n  geom_tile(color = \"black\") +\n  scale_fill_gradient2(low = \"#0070C0\", high = \"#E42832\", mid = \"white\",\n                       midpoint = 0, limit = c(min(suppl_corr_t_melted$value),\n                                               max(suppl_corr_t_melted$value)),\n                       space = \"Lab\", name=\"Pearson\\ncorrelation\",na.value='#D6D6D6') +\n  geom_text(aes(label = scales::number(value, accuracy = 0.01)),fontface=\"bold\", color = \"black\", size = 5) +\n  theme_minimal() +\n  labs(x=\"Food and beverage categories\",y=NULL) +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1,size=12 ),\n        axis.text.y = element_text(size=12 ),\n        axis.title.x=element_blank(),\n        #legend.justification = c(1, 0),\n        #legend.direction = \"horizontal\",\n        legend.position = \"right\",\n        plot.background = element_rect(fill=\"white\",colour = \"white\"),\n        panel.border = element_blank(),\n        legend.background=element_rect(fill=\"white\"))\n\ncorr_heatmap\n\n# ********************************************** #\n#            Export graph as PDF/PNG             #\n# ********************************************** #\n\nggsave(here::here(suppl_dir,\"SupplFig1_corr_heatmap.pdf\"),\n       plot=corr_heatmap, dpi=300, width=13,height=7, units=\"in\",scale=1, device=cairo_pdf)\n\nggsave(here::here(suppl_dir,\"SupplFig1_corr_heatmap.png\"),\n       plot=corr_heatmap, dpi=300, width=13,height=7, units=\"in\",scale=1)\n\n\n\n\n\nSupplemental Figure 1: Pearson correlations heat map among food and beverage categories contributing to the HEFI-2019 and nutrient intakes in adults aged 65 years or more from the CCHS 2015 - Nutrition. A higher correlation indicates that higher food or beverage intakes are associated with higher nutrient intakes and vice versa. All dietary intakes were modelled using the National Cancer Institute Markov Chain Monte Carlo multivariate method to estimate usual intakes (see Methods). Adapted from Statistics Canada, Canadian Community Health Survey- Nutrition: Public Use Microdata File, 2015, June 2023. This does not constitute an endorsement by Statistics Canada of this product. Bev, beverages; CCHS, Canadian Community Health Survey."
  },
  {
    "objectID": "9.2-HEFI19-NUT_OSM.html#prevalence-of-inadequate-nutrient-intake",
    "href": "9.2-HEFI19-NUT_OSM.html#prevalence-of-inadequate-nutrient-intake",
    "title": "Supplemental Material",
    "section": "Prevalence of inadequate nutrient intake",
    "text": "Prevalence of inadequate nutrient intake\n\n\nCode\n# ************************************************************************ #\n#                 Import SAS data on marginal Pr(X&lt;EAR)                    #\n# ************************************************************************ #\n\n  # note: mrg, marginal (crude population average)\n\n# If data has not been created+saved un &lt;9.1-HEFI19-NUT_ARTICLE.qmd&gt;, do it here\nif(file.exists(file.path(res_dir,\"mrg_all.rdata\"==FALSE))){\n# ********************************************** #\n#                    Protein                     #\n# ********************************************** #\n\nmrg_pro &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_pro', 'Results', 'distrib_y_rel_wf.sas7bdat')) |&gt;\n  ### Hardcoded value for Pr(X&lt;EAR)\n  dplyr::filter(name==\"Prob1\") |&gt;\n  # Add nutrient identifier\n  dplyr::mutate(varname=\"pro\")\n\n# ********************************************** #\n#             Calcium and Vitamin D              #\n# ********************************************** #\n\nmrg_cavitd &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_ca_vit_d', 'Results', 'distrib_y_wf.sas7bdat')) |&gt; \n  dplyr::slice(grep(\"EAR\",name)) \n\n# ********************************************** #\n#         Iron, Zinc, Vit. B6, Vit. B12          #\n# ********************************************** #\n\nmrg_miscA &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_miscA', 'Results', 'distrib_y_wf.sas7bdat')) |&gt; \n  dplyr::slice(grep(\"EAR\",name)) \n\n# ********************************************** #\n#        Dietary Folate Eq, Mg, K, Fibers        #\n# ********************************************** #\n\nmrg_miscB &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_miscB', 'Results', 'distrib_y_wf.sas7bdat')) |&gt; \n  dplyr::slice(grep(\"EAR\",name)) \n\n# ********************************************** #\n#                Vitamin A (RAE)                 #\n# ********************************************** #\n\nmrg_rae &lt;- \n  haven::read_sas(file.path(path,'NCI', 'MCMC_vit_a', 'Results', 'distrib_y_wf.sas7bdat')) |&gt; \n  dplyr::slice(grep(\"EAR\",name)) \n\n# ********************************************** #\n#            Append nutrient distrib             #\n# ********************************************** #\n\nmrg_all &lt;- \n  rbind(mrg_pro,mrg_cavitd,\n        mrg_miscA,mrg_miscB,\n        mrg_rae) |&gt;\n  # note: fibers and potassium (Pr(X&lt;Adequate Intake)) cannot appear here, since cut-point is not EAR\n  dplyr::filter(\n      !(varname %in% c(\"fibers\",\"pota\"))\n  )\n\n# clean temporary \n rm(list=c(\"mrg_pro\",\"mrg_cavitd\",\"mrg_miscA\",\"mrg_miscB\",\"mrg_rae\"))\n}\n\n# load &lt;mrg_all&gt; data in any case\nload(file = file.path(res_dir,\"mrg_all.rdata\"))\n \n# *********************************************************************** #\n#             Combine manual data with prevalence estimates               #\n# *********************************************************************** #\n\n# ********************************************** #\n#       Load manually-entered data on EAR        #\n# ********************************************** #\n\n# Import\ndata_nut &lt;-\n  readxl::read_xlsx(path=file.path(res_dir,\"table_data.xlsx\"),sheet=\"nutrient\") |&gt; \n  # additional formatting\n  dplyr::mutate(\n    ## combine nutrients and their unit\n    nutrients_unit = paste0(nutrients,\", \",unit),\n    ## flag AI vs. EAR\n    descr_value = case_when(\n      varname %in% c(\"pota\", \"fibers\") ~ \"AI\",\n      .default = \"EAR\"\n    ),\n    ## keep only EAR for pro\n    across(.cols = starts_with(\"drig\"), function(x) ifelse(varname==\"pro_kg\",0.66,x))\n  ) |&gt;\n  select(starts_with(\"varname\"), starts_with(\"nturient\"), descr_value, starts_with(\"drig\"), unit)\n\n# Prepare and combine data\nmrg_all_w &lt;- \n  mrg_all |&gt;\n  # drop older estimate variable\n  select(-c(estimate_ci)) |&gt; \n  # make new formatted estimates for tables\n  mutate(\n    estimate_ci = makeEstimateCI(estimate,\n                                 ifelse(lcl95&lt;0,0,lcl95), ucl95,\n                                 sep = \", \", rounding=0.1)\n  ) |&gt;\n  # further select only identifier + formatted estimates\n  select(varname, drig, estimate_ci) |&gt;\n  # transpose long to wide for table purpose\n  pivot_wider(\n    names_from = drig,\n    values_from = estimate_ci,\n    names_prefix = \"drig_\"\n  )\n\n# Combine cut-off information (data_nut) with prevalence estimates\nsuppl_mrg_prob &lt;-\n  bind_rows(data_nut, mrg_all_w)\n\n# save for further analysis\nsave(suppl_mrg_prob,\n     file = file.path(res_dir,\"suppl_mrg_prob.rdata\"))\n\n# clean temporary\nrm(list=c(\"data_nut\", \"mrg_all\", \"mrg_all_w\"))\n\n\n\n\nCode\n# *********************************************************************** #\n#                Table of marginal Pr(X&lt;EAR) by DRI group                 #\n# *********************************************************************** #\n\nload(file.path(res_dir,\"suppl_mrg_prob.rdata\"))\n  \n  # note: (created in &lt;mrg-prob-data&gt; chunk)\n\n# Add 'clean' label to describe nutrients\nsuppl_mrg_prob$varname_f &lt;- \n  factor(suppl_mrg_prob$varname,\n         levels = varname_list,\n         labels = varlabeltidy_list)\n  \n# Combine description of values with unit for clearer labelling\nsuppl_mrg_prob&lt;- \n  suppl_mrg_prob |&gt;\n  mutate(\n    descr_value_f = case_when(\n      descr_value == \"EAR\" ~ paste0(\"EAR, \",unit),\n      descr_value == \"AI\"  ~ paste0(\"AI, \", unit),\n      is.na(descr_value ) ~ \"Pr(X&lt;EAR), %\"\n    )\n  )\n\n# ********************************************** #\n#                 Generate table                 #\n# ********************************************** #\n\ntab_mrg_prob &lt;- \n  suppl_mrg_prob |&gt; \n  select(descr_value_f, varname_f, starts_with(\"drig\")) |&gt;\n  group_by(varname_f) |&gt;\n  gt::gt() |&gt;\n  gt::cols_hide(columns = c(drig_0)) |&gt;\n  gt::cols_move_to_start(columns = c(descr_value_f)) |&gt;\n  gt::tab_spanner(label = \"Dietary Reference Intake (DRI) age and sex group\",\n                  columns = starts_with(\"drig_\")) |&gt;\n   gt::cols_label(\n    descr_value_f = \"Nutrient\",\n    drig_12 = \"Males, 65-70 y\",\n    drig_14 = \"Males, 71 y+\",\n    drig_13 = \"Females, 65-70 y\",\n    drig_15 = \"Females, 71 y+\"\n  ) |&gt;\n  gt::tab_style(\n    style = list(\n      cell_text(weight = \"bold\")  ),\n    locations = cells_column_labels(columns=c(1:2))\n  ) |&gt;\n  gt::tab_style(\n    style = list(\n      cell_text(weight = \"bold\")  ),\n    locations = cells_column_spanners(spanners=everything())\n  ) |&gt;\n  gt::tab_style(\n    style = cell_text(align = \"left\", indent = px(20)),\n      locations = cells_body(columns= c(1,2))\n      # remnant: which(colnames(suppl_mrg_prob)==\"descr_value_f\")\n    ) |&gt;\n  gt::tab_header(\n     title = paste0(\"Supplemental Table \",stable_index,\". Cut-offs (EAR) used to assess the prevalence of intake inadequacy and prevalence estimates (Pr(X&lt;EAR)) in adults aged 65 years or more from the CCHS 2015 - Nutrition\")) |&gt;\n gt::tab_footnote(\n     footnote = \"All nutrients were modelled using the National Cancer Institute Markov Chain Monte Carlo multivariate method to estimate usual intakes (see Methods). Adapted from Statistics Canada, Canadian Community Health Survey- Nutrition: Public Use Microdata File, 2015, June 2023. This does not constitute an endorsement by Statistics Canada of this product. AI, adequate intakes; CCHS, Canadian Community Health Survey; DRI, Dietary Reference Intake; EAR, Estimated Average Requirements; RAE, Retinol Activity Equivalent; X, usual nutrient intake.\",\n     locations = cells_title(\"title\")\n     ) |&gt;\n   gt::tab_footnote(\n     footnote = \"Prevalence of inadequate intakes are not calculated for potassium and fiber which do not have Estimated Average Requirements due to insufficient evidence, but only Adequate Intakes (AI) values.\",\n     locations = cells_row_groups(groups = c(\"Potassium\", \"Fiber\"))\n     ) |&gt;\n  gtstyle()\n\n# *********************************************************************** #\n#  Use &lt;gtsave_select&gt; function to print table directly or save as docx   #\n# *********************************************************************** #\n  \ngtsave_select(tab_mrg_prob,paste0(\"SupplTable \",stable_index,\". nutrients\"),OUTPUT_WORD)\n\n\n\n\n\n\nSupplemental Table 4:  tbl-mrg-prob \n  \n    \n      Supplemental Table 4. Cut-offs (EAR) used to assess the prevalence of intake inadequacy and prevalence estimates (Pr(X&lt;EAR)) in adults aged 65 years or more from the CCHS 2015 - Nutrition1\n    \n    \n    \n      Nutrient\n      \n        Dietary Reference Intake (DRI) age and sex group\n      \n    \n    \n      Males, 65-70 y\n      Males, 71 y+\n      Females, 65-70 y\n      Females, 71 y+\n    \n  \n  \n    \n      Protein\n    \n    EAR, g/kg\n0.66\n0.66\n0.66\n0.66\n    Pr(X&lt;EAR), %\n3.6 (0.0, 8.6)\n9.7 (4.7, 14.6)\n11.5 (4.2, 18.9)\n14.6 (8.9, 20.4)\n    \n      Calcium\n    \n    EAR, mg\n800\n1000\n1000\n1000\n    Pr(X&lt;EAR), %\n55.0 (46.2, 63.7)\n86.9 (82.0, 91.8)\n87.5 (82.6, 92.4)\n93.9 (90.5, 97.2)\n    \n      Vitamin D\n    \n    EAR, mcg\n10\n10\n10\n10\n    Pr(X&lt;EAR), %\n89.4 (85.0, 93.9)\n95.6 (92.3, 99.0)\n99.3 (98.1, 100.5)\n99.4 (97.9, 100.8)\n    \n      Iron\n    \n    EAR, mg\n6\n6\n5\n5\n    Pr(X&lt;EAR), %\n0.0 (0.0, 0.3)\n0.0 (0.0, 0.5)\n0.7 (0.2, 1.1)\n1.1 (0.2, 2.0)\n    \n      Zinc\n    \n    EAR, mg\n9.4\n9.4\n6.8\n6.8\n    Pr(X&lt;EAR), %\n13.0 (0.4, 25.7)\n44.0 (34.7, 53.4)\n18.1 (9.3, 26.9)\n33.4 (24.4, 42.4)\n    \n      Vitamin B6\n    \n    EAR, mg\n1.4\n1.4\n1.3\n1.3\n    Pr(X&lt;EAR), %\n15.7 (6.5, 25.0)\n33.0 (24.0, 42.1)\n36.4 (27.6, 45.3)\n58.0 (50.5, 65.6)\n    \n      Vitamin B12\n    \n    EAR, mcg\n2\n2\n2\n2\n    Pr(X&lt;EAR), %\n0.0 (0.0, 1.1)\n0.5 (0.0, 2.8)\n7.9 (0.0, 17.9)\n11.5 (0.9, 22.2)\n    \n      Folate\n    \n    EAR, mcg\n320\n320\n320\n320\n    Pr(X&lt;EAR), %\n8.0 (0.0, 16.3)\n14.3 (6.0, 22.6)\n39.7 (28.0, 51.5)\n48.6 (38.1, 59.1)\n    \n      Magnesium\n    \n    EAR, mg\n350\n350\n265\n265\n    Pr(X&lt;EAR), %\n63.9 (55.1, 72.7)\n80.4 (74.9, 85.8)\n44.7 (35.9, 53.6)\n64.8 (58.8, 70.7)\n    \n      Fiber2\n    \n    AI, g\n30\n30\n21\n21\n    \n      Potassium2\n    \n    AI, mg\n3400\n3400\n2600\n2600\n    \n      Vitamin A\n    \n    EAR, RAE\n625\n625\n500\n500\n    Pr(X&lt;EAR), %\n37.1 (19.9, 54.3)\n44.3 (31.2, 57.4)\n24.6 (14.4, 34.9)\n36.9 (26.8, 47.1)\n  \n  \n  \n    \n      1 All nutrients were modelled using the National Cancer Institute Markov Chain Monte Carlo multivariate method to estimate usual intakes (see Methods). Adapted from Statistics Canada, Canadian Community Health Survey- Nutrition: Public Use Microdata File, 2015, June 2023. This does not constitute an endorsement by Statistics Canada of this product. AI, adequate intakes; CCHS, Canadian Community Health Survey; DRI, Dietary Reference Intake; EAR, Estimated Average Requirements; RAE, Retinol Activity Equivalent; X, usual nutrient intake.\n    \n    \n      2 Prevalence of inadequate intakes are not calculated for potassium and fiber which do not have Estimated Average Requirements due to insufficient evidence, but only Adequate Intakes (AI) values.\n    \n  \n\n\n\n\n\nCode\nstable_index &lt;- stable_index+1"
  },
  {
    "objectID": "9.2-HEFI19-NUT_OSM.html#relationship-between-the-hefi-2019-score-and-prevalence-of-inadequate-nutrient-intake",
    "href": "9.2-HEFI19-NUT_OSM.html#relationship-between-the-hefi-2019-score-and-prevalence-of-inadequate-nutrient-intake",
    "title": "Supplemental Material",
    "section": "Relationship between the HEFI-2019 score and prevalence of inadequate nutrient intake",
    "text": "Relationship between the HEFI-2019 score and prevalence of inadequate nutrient intake\n\n\nCode\n# ********************************************** #\n#     Load data created in HEFI19-NUT_MS.rmd     #\n# ********************************************** #\n\n# All nutrients\nload(file=file.path(res_dir,\"logreg_beta_all.rdata\"))\nload(file=file.path(res_dir,\"logreg_beta_all0.rdata\"))\n\n# Protein for different EAR\nload(file=file.path(res_dir,\"logreg_beta_pro.rdata\"))\nload(file=file.path(res_dir,\"logreg_beta_pro0.rdata\"))\n\n\n\nPrevalence of inadequate protein intake for hypothetical higher recommendations\nThe current Estimated Average Requirements (EAR) for protein is 0.66 g/kg, based on a Recommended Daily Allowance (RDA) of 0.8 g/kg to avoid negative nitrogen balance. Emerging consensus support that the RDA should be set to at least 1.0 to 1.2 g/kg for healthy older adults to prevent sarcopenia (Bauer et al. 2013; Phillips, Chevalier, and Leidy 2016; Traylor, Gorissen, and Phillips 2018). Accordingly, hypothetical EAR cut-offs for these higher RDA could be approximately 0.8 g/kg (RDA of 1.0 g/kg) or 1.0 g/kg (RDA of 1.2 g/kg).\nSupplemental Figure 2 presents the relationship between the HEFI-2019 and protein intake inadequacy for the current and hypothetical EAR. HEFI-2019 score at the 90th percentile compared with median HEFI-2019 score reduced the prevalence of inadequate protein intakes for all cut-offs\n\n\nCode\n# *********************************************************************** #\n#      Cleveland dot plot with Pr(X&lt;EAR), risk difference, PROTEINS       #\n# *********************************************************************** #\n\n# ********************************************** #\n#                Make new labels                 #\n# ********************************************** #\npro_ear_labels &lt;-\n  c(\"0.66 g/kd (current)\",\n    \"0.8 g/kg\",\n    \"1.0 g/kg\")\n\nlogreg_beta_pro0[nrow(logreg_beta_pro0):1,\"outcome_f\"] &lt;-\n  factor(logreg_beta_pro0[nrow(logreg_beta_pro0):1,]$outcome,\n         levels = logreg_beta_pro0[nrow(logreg_beta_pro0):1,]$outcome,\n         labels = pro_ear_labels[length(pro_ear_labels):1])\n\nlogreg_beta_pro[nrow(logreg_beta_pro):1,\"outcome_f\"] &lt;- \n    factor(logreg_beta_pro[nrow(logreg_beta_pro):1,]$outcome,\n         levels = logreg_beta_pro[nrow(logreg_beta_pro):1,]$outcome,\n         labels = pro_ear_labels[length(pro_ear_labels):1])\n\n\n# ********************************************** #\n#         Panel A - Pr(X&lt;EAR) at t1, t0          #\n# ********************************************** #\n\n  # note: both prevalence must be in the `wide` format to be plotted on the same line\n\npanelA &lt;- \n  logreg_beta_pro0 |&gt;\n  dplyr::filter(drig==0) |&gt;\n  ggplot() +\n  geom_point(aes(x = y0, y = outcome_f, shape=\"50th perc.\"),size=4) +\n  geom_point(aes(x = y1, y = outcome_f, shape=\"90th perc.\"),size=4) + \n  scale_shape_manual(values=c(1,16)) + \n  scale_x_continuous(labels = scales::percent,limits=c(0,1)) +\n  labs(y=NULL,\n       x=\"Prevalence of\\ninadequate intakes, %\",shape = \"\") +\n  theme_dotplotx()+ \n  theme(axis.text.x = element_text(color=\"black\"),\n        axis.text.y = element_text(color=\"black\"),\n        legend.key=element_blank(),\n        legend.position=\"top\") \n\n# ********************************************** #\n#           Panel B - t1/t0 risk ratio           #\n# ********************************************** #\n\npanelB &lt;- \n  logreg_beta_pro |&gt;\n  dplyr::filter(drig==0,name==\"risk_diff\") |&gt;\n  # create labels with estimates and 95ci\n  dplyr::mutate(\n    estimate_ci = makeEstimateCI(estimate,lcl95,ucl95,sep=\", \",rounding=0.1)\n  ) |&gt;\n  ggplot(aes(x = estimate, y=outcome_f)) +\n  geom_point(shape=15,size=4) +\n  geom_vline(xintercept = 0, linetype=\"dashed\", color=\"gray\") +\n  geom_linerange(aes(xmin=lcl95, xmax=ucl95), stat=\"identity\") +\n  geom_text(aes(x=estimate, label=estimate_ci), vjust = 2 ,size=3.5) +\n  labs(y=NULL,x=\"Prevalence difference,\\n% point (95%CI)\") +\n  #coord_cartesian(xlim=c(0,2)) +\n  theme_dotplotx() + \n  theme(axis.text.y=element_blank(),\n        axis.text.x = element_text(color=\"black\"))\n\n\n# ********************************************** #\n#               Combine Panel A, B               #\n# ********************************************** #\n\nlogregplotpro &lt;- \n  panelA + panelB \n\nlogregplotpro\n\n# ********************************************** #\n#            Export graph as PDF/PNG             #\n# ********************************************** #\n\n  ggplot2::ggsave(here::here(suppl_dir,\"SupplFig2_hypothetical_ear.pdf\"),\n        plot=logregplotpro, dpi=300, width=9,height=5, units=\"in\",scale=0.85,device = cairo_pdf)\n\n  ggplot2::ggsave(here::here(suppl_dir,\"SupplFig2_hypothetical_ear.png\"),\n         plot=logregplotpro, dpi=300, width=9,height=5, units=\"in\",scale=0.85)\n\n\n\n\n\nSupplemental Figure 2: Prevalence of inadequate protein intakes and difference for HEFI-2019 scores at the 90th compared with the 50th percentile of the score distribution in adults aged 65 years or more from the CCHS 2015 - Nutrition. Inadequate intakes are intakes below the cut-offs (i.e., 0.66, 0.8 and 1.0 g/kg). Both the HEFI-2019 score and nutrient intakes were modeled using the National Cancer Institute multivariate method to estimate usual intakes (see Methods). Adapted from Statistics Canada, Canadian Community Health Survey- Nutrition: Public Use Microdata File, 2015, June 2023. This does not constitute an endorsement by Statistics Canada of this product. CCHS, Canadian Community Health Survey; HEFI-2019, Healthy Eating Food Index-2019."
  }
]